[
  {
    "id": 501,
    "question": "스냅샷 이미지를 이용해서 신규 생성한 볼륨을 현재 사용중인 서버에 Attach한 후 서버를 리부팅하였으나, 정상적으로 리부팅이 되지 않는다. 어떤 이슈를 의심할 수 있는가?",
    "example": [
      {
        "num": 1,
        "text": "해당 스냅샷 이미지는 sysprep작업이 적용되지 않는 이미지 일 것이다."
      },
      {
        "num": 2,
        "text": "스냅샷 이미지를 이용해 생성한 볼륨을 서버에 마운트 후 리부팅을 했었어야 한다."
      },
      {
        "num": 3,
        "text": "스냅샷 이미지를 이용해 생성한 볼륨이 다른 서버의 부팅 볼륨일 것이며, uuid중복으로 정상부팅되지 않는 것이다."
      },
      {
        "num": 4,
        "text": "스냅샷 이미지를 이용해서 신규 볼륨 생성 시 선택한 볼륨 타입이 현재 사용중인 서버에 Attach 할 수 없는 볼륨이다."
      }
    ],
    "answer": 3,
    "explanation": "스냅샷 이미지로 생성한 볼륨이 다른 서버의 부팅 볼륨일 경우, UUID(Universally Unique Identifier)가 중복될 수 있습니다. 리눅스 시스템에서 UUID는 디바이스를 고유하게 식별하는 데 사용되므로, UUID 중복은 부팅 과정에서 문제를 일으킬 수 있습니다. 이 경우, 새로 생성된 볼륨의 UUID를 변경하거나, fstab 파일을 수정하여 마운트 방식을 변경해야 할 수 있습니다."
  },
  {
    "id": 502,
    "question": "동일한 Subnet에 생성한 서버와 Cloud DB for MySQL을 연동해야 한다. 서버에서 데이터베이스 서버로 TCP/3306 포트를 통해 접근해야 하지만 통신이 되고 있지 않다. 다음 중 정상 통신을 위해 해야하는 설정은?",
    "example": [
      {
        "num": 1,
        "text": "Cloud DB for MySQL의 ACG에 접근소스를 서버IP로 하여 3306 포트 허용 정책을 추가한다."
      },
      {
        "num": 2,
        "text": "서버의 ACG에 접근 소스를 데이터베이스 도메인으로 하여 3306 포트 허용 정책을 추가한다."
      },
      {
        "num": 3,
        "text": "두 개체가 포함된 Subnet에 매핑된 NACL에 접근 소스를 Subnet대역으로 하여 3306포트 허용 정책을 추가한다."
      },
      {
        "num": 4,
        "text": "데이터베이스 서버에 접속하여 서버 방화벽을 해제한다."
      }
    ],
    "answer": 1,
    "explanation": "네이버 클라우드 플랫폼에서 Cloud DB for MySQL과 서버 간의 통신을 위해서는 Cloud DB for MySQL의 ACG(Access Control Group)에 적절한 인바운드 규칙을 추가해야 합니다. 이 경우, 서버의 IP를 소스로 하고 3306 포트(MySQL의 기본 포트)를 허용하는 정책을 추가해야 합니다. 이렇게 함으로써 지정된 서버만이 데이터베이스에 접근할 수 있게 되어 보안성을 유지하면서 필요한 통신이 가능해집니다."
  },
  {
    "id": 503,
    "question": "리눅스에서 현재 메모리 사용량을 확인할 수 있는 명령어가 아닌 것은?",
    "example": [
      {
        "num": 1,
        "text": "top"
      },
      {
        "num": 2,
        "text": "meminfo"
      },
      {
        "num": 3,
        "text": "sar"
      },
      {
        "num": 4,
        "text": "free"
      }
    ],
    "answer": 2,
    "explanation": "리눅스에서 메모리 사용량을 확인하는 일반적인 명령어로는 top, sar, free가 있습니다. 'top' 명령어는 시스템의 전반적인 상태를 실시간으로 보여주며 메모리 사용량도 포함됩니다. 'sar' 명령어는 시스템 활동 리포트를 제공하며 메모리 사용량 정보도 포함할 수 있습니다. 'free' 명령어는 시스템의 메모리 사용량을 간단하게 보여줍니다. 반면, 'meminfo'는 실제 리눅스 명령어가 아니며, '/proc/meminfo' 파일을 보는 것을 의미할 수 있으나 직접적인 명령어는 아닙니다."
  },
  {
    "id": 504,
    "question": "SAR로 물리적 디스크에서 발생한 I/O를 확인하고자 한다. 이 때 사용할 수 있는 옵션은 무엇인가?",
    "example": [
      {
        "num": 1,
        "text": "sar -a"
      },
      {
        "num": 2,
        "text": "sar -b"
      },
      {
        "num": 3,
        "text": "sar -c"
      },
      {
        "num": 4,
        "text": "sar -f"
      }
    ],
    "answer": 2,
    "explanation": "SAR(System Activity Reporter) 명령어에서 '-b' 옵션은 I/O와 전송률 통계를 보여줍니다. 이 옵션을 사용하면 디스크의 읽기/쓰기 작업, 초당 블록 수 등 물리적 디스크의 I/O 활동을 상세히 확인할 수 있습니다. 다른 옵션들의 의미는 다음과 같습니다. '-a'는 파일 접근 통계, '-c'는 시스템 호출 통계, '-f'는 특정 파일에서 데이터를 읽는 옵션입니다."
  },
  {
    "id": 505,
    "question": "여러명의 사람들이 공통의 네이버 클라우드 플랫폼 인프라 환경을 이용하고 있다. 누군가 실수로 운영중인 서버를 반납하였다. 다음과 같은 사태를 막고자 할 때 사용할 수 있는 방법은?",
    "example": [
      {
        "num": 1,
        "text": "중요 서버들은 서버 관리 및 설정 환경에서 반납보호를 설정한다."
      },
      {
        "num": 2,
        "text": "실수한 사람을 문책한다"
      },
      {
        "num": 3,
        "text": "서버 이름에 반납 금지를 표기한다."
      },
      {
        "num": 4,
        "text": "Resource Manager에서 중요 서버를 설정한다."
      }
    ],
    "answer": 1,
    "explanation": "네이버 클라우드 플랫폼에서는 중요한 서버의 실수로 인한 반납을 방지하기 위해 '반납보호' 기능을 제공합니다. 이 기능은 서버 관리 및 설정 환경에서 설정할 수 있으며, 활성화하면 해당 서버를 반납하려 할 때 추가 확인 절차가 필요하게 됩니다. 이는 단순한 실수로 인한 서버 반납을 효과적으로 방지할 수 있는 방법입니다. 다른 옵션들은 실질적인 방지책이 되지 못하거나(B, C), 네이버 클라우드 플랫폼의 실제 기능이 아닙니다(D)."
  },
  {
    "id": 506,
    "question": "다수의 클라이언트에서 서버의 공인 IP로 접속하면 잘 보이지만 L7헬스체크가 적용된 LB로 접속하면 접속이 되지 않고 LB에서 보면 서버 연결상태가 실패로 나온다. 원인으로 추정할만한 것은 무엇인가? (설정 내용은 이미지 참고)",
    "example": [
      {
        "num": 1,
        "text": "ACG"
      },
      {
        "num": 2,
        "text": "Index.html"
      },
      {
        "num": 3,
        "text": "DNS"
      },
      {
        "num": 4,
        "text": "virtualhost"
      }
    ],
    "answer": 2,
    "explanation": "L7(응용 계층) 헬스 체크는 주로 HTTP/HTTPS 프로토콜을 사용하여 특정 URL에 요청을 보내고 응답을 확인합니다. 'Index.html'이 문제의 원인일 가능성이 높은 이유는 다음과 같습니다: 1) 공인 IP로 직접 접속할 때는 웹 서버의 기본 페이지가 표시되지만, 2) L7 헬스 체크는 특정 경로나 파일(예: /health 또는 /index.html)을 확인할 수 있습니다. 만약 이 파일이 없거나 접근 권한이 올바르지 않으면 헬스 체크가 실패할 수 있습니다. 따라서 Index.html 파일의 존재 여부, 권한, 내용을 확인하고 필요하다면 L7 헬스 체크 설정을 조정해야 할 수 있습니다."
  },
  {
    "id": 507,
    "question": "리눅스에서 네트워크 트래픽을 확인할 수 있는 명령어를 모두 고르시오.",
    "example": [
      {
        "num": 1,
        "text": "netstat -i"
      },
      {
        "num": 2,
        "text": "ifconfig"
      },
      {
        "num": 3,
        "text": "netconfig"
      },
      {
        "num": 4,
        "text": "network"
      }
    ],
    "answer": [1, 2],
    "explanation": "리눅스에서 네트워크 트래픽을 확인할 수 있는 주요 명령어는 'netstat -i'와 'ifconfig'입니다. 'netstat -i'는 모든 네트워크 인터페이스의 통계를 보여주며, 송수신된 패킷과 바이트 수, 에러 및 드롭된 패킷 등의 정보를 제공합니다. 'ifconfig'는 네트워크 인터페이스의 구성 정보와 함께 송수신된 패킷과 바이트 수도 보여줍니다. 'netconfig'는 네트워크 설정 도구이며, 'network'는 일반적인 리눅스 명령어가 아닙니다."
  },
  {
    "id": 508,
    "question": "windows환경하에서 다음의 ping 명령어의 옵션을 어떤 의미인가? ping -n -5 -I 2 www.naver.com",
    "example": [
      {
        "num": 1,
        "text": "5byte를 2초마다 전송"
      },
      {
        "num": 2,
        "text": "2초의 간격으로 5번 전송"
      },
      {
        "num": 3,
        "text": "TTL값을 2로하여 5번 전송"
      },
      {
        "num": 4,
        "text": "5byte를 2번 전송"
      }
    ],
    "answer": 3,
    "explanation": "Windows 환경에서 'ping -n -5 -I 2 www.naver.com' 명령어의 의미는 다음과 같습니다:\n-n: 이 옵션은 보통 ping 횟수를 지정하지만, 여기서는 숫자가 없어 의미가 없습니다.\n-5: 이 옵션은 Windows ping 명령어에서 유효하지 않습니다.\n-I 2: 이 옵션은 TTL(Time To Live) 값을 2로 설정합니다.\n따라서 이 명령은 www.naver.com에 대해 TTL 값을 2로 설정하여 ping을 보내는 것을 의미합니다. TTL 2는 패킷이 최대 2개의 라우터를 통과할 수 있음을 의미합니다. 그러나 정확한 ping 횟수나 간격은 지정되지 않았습니다."
  },
  {
    "id": 509,
    "question": "Windows 클라이언트에서 DNS캐시된 정보를 삭제하고자 할 때 사용하는 명령어는?",
    "example": [
      {
        "num": 1,
        "text": "mdc flush"
      },
      {
        "num": 2,
        "text": "ndc flush"
      },
      {
        "num": 3,
        "text": "ipconfig / flushdns"
      },
      {
        "num": 4,
        "text": "netsh flushdns"
      }
    ],
    "answer": 3,
    "explanation": "Windows 환경에서 DNS 캐시를 삭제하는 명령어는 'ipconfig /flushdns'입니다. 이 명령어는 DNS 리졸버 캐시를 비우는 데 사용됩니다. DNS 캐시를 삭제하면 이전에 저장된 DNS 조회 결과가 제거되어 새로운 DNS 조회가 수행됩니다. 이는 DNS 변경 사항이 즉시 적용되도록 하거나 DNS 관련 문제를 해결하는 데 유용합니다. 'mdc flush'와 'ndc flush'는 존재하지 않는 명령어이며, 'netsh flushdns'는 Windows의 이전 버전에서 사용되었지만 현재는 권장되지 않습니다."
  },
  {
    "id": 510,
    "question": "네이버 클라우드 플랫폼 Classic 환경에 존재하는 서버의 10.x.x.x 사설 IP대역 NIC에 두 개 이상의 IP를 부여하였을 때 발생할 수 있는 상황은?",
    "example": [
      {
        "num": 1,
        "text": "기존 IP로는 통신이 되나 추가된 IP로 통신이 되지 않는다."
      },
      {
        "num": 2,
        "text": "추가된 IP뿐만 아니라 기존 IP도 통신이 되지 않는다."
      },
      {
        "num": 3,
        "text": "서버가 강제 정지된다."
      },
      {
        "num": 4,
        "text": "기존 IP는 통신이 안되고 추가된 IP로만 통신이 된다."
      }
    ],
    "answer": 2,
    "explanation": "네이버 클라우드 플랫폼 Classic 환경에서 10.x.x.x 사설 IP 대역 NIC에 두 개 이상의 IP를 부여하면 통신 문제가 발생할 수 있습니다. 이는 Classic 환경의 네트워크 구성 특성 때문입니다. 추가된 IP뿐만 아니라 기존 IP도 통신이 되지 않는 현상이 발생할 수 있습니다. 이는 라우팅 테이블 충돌이나 네트워크 인터페이스 구성의 문제로 인한 것일 수 있습니다. 이런 상황을 피하기 위해서는 VPC 환경을 사용하거나, Classic 환경에서는 단일 IP 사용을 권장합니다."
  },
  {
    "id": 511,
    "question": "Windows에서 라우팅 테이블을 확인 할 수 있는 명령어는 무엇인가?",
    "example": [
      {
        "num": 1,
        "text": "route -arn"
      },
      {
        "num": 2,
        "text": "route"
      },
      {
        "num": 3,
        "text": "route print"
      },
      {
        "num": 4,
        "text": "netstat"
      }
    ],
    "answer": 3,
    "explanation": "Windows 환경에서 라우팅 테이블을 확인하는 명령어는 'route print'입니다. 이 명령어는 현재 시스템의 IP 라우팅 테이블을 모두 표시합니다. 여기에는 네트워크 대상, 넷마스크, 게이트웨이, 인터페이스, 메트릭 등의 정보가 포함됩니다. 'route' 명령어만 사용하면 사용법이 표시되고, 'route -arn'은 유효하지 않은 옵션입니다. 'netstat'는 네트워크 연결 상태와 통계를 보여주는 명령어로, 라우팅 테이블을 직접적으로 보여주지는 않습니다."
  },
  {
    "id": 512,
    "question": "리눅스에서 시스템 로그인 기록을 확인하는 명령어는?",
    "example": [
      {
        "num": 1,
        "text": "dmesg"
      },
      {
        "num": 2,
        "text": "lastlogin"
      },
      {
        "num": 3,
        "text": "last"
      },
      {
        "num": 4,
        "text": "source"
      }
    ],
    "answer": 3,
    "explanation": "리눅스에서 시스템 로그인 기록을 확인하는 명령어는 'last'입니다. 'last' 명령어는 /var/log/wtmp 파일을 읽어 시스템에 로그인한 사용자의 기록을 보여줍니다. 이 명령어는 사용자명, 사용한 터미널, 로그인한 위치(IP 주소), 로그인 및 로그아웃 시간 등의 정보를 제공합니다. 'dmesg'는 커널 링 버퍼의 메시지를 보여주고, 'lastlogin'은 존재하지 않는 명령어이며, 'source'는 스크립트를 실행하는 명령어로 로그인 기록과는 관련이 없습니다."
  },
  {
    "id": 513,
    "question": "네이버 클라우드 플랫폼 Load Balancer의 헬스체크에 대한 설명 중 잘못된 것은?",
    "example": [
      {
        "num": 1,
        "text": "헬스체크 주기는 Classic 환경에서는 6초 간격이며, VPC환경에서는 디폴트 30초이다."
      },
      {
        "num": 2,
        "text": "5번 응답이 없는 경우 unbind한다."
      },
      {
        "num": 3,
        "text": "Unbind됐던 서버가 헬스체크 응답이 3번 성공하면 Bind된다."
      },
      {
        "num": 4,
        "text": "VPC환경에서는 헬스체크 주기를 Target Group에서 변경할 수 있다."
      }
    ],
    "answer": 2,
    "explanation": "네이버 클라우드 플랫폼 Load Balancer의 헬스체크에 대한 설명 중 잘못된 것은 '5번 응답이 없는 경우 unbind한다'입니다. 실제로는 3번 연속으로 응답이 없는 경우에 unbind됩니다. 이는 서버의 일시적인 부하나 네트워크 지연으로 인한 오탐을 줄이기 위한 설정입니다. 다른 설명들은 모두 정확합니다. Classic 환경과 VPC 환경의 기본 헬스체크 주기가 다르며, VPC 환경에서는 Target Group에서 이 주기를 변경할 수 있습니다. 또한, unbind된 서버가 다시 bind되기 위해서는 3번 연속 성공적인 응답이 필요합니다."
  },
  {
    "id": 514,
    "question": "CPU, Memory, DISK I/O 사용량 등 시스템 전반에 걸친 시스템 성능지표를 수집, 레포트하고 저장하는 명령어는?",
    "example": [
      {
        "num": 1,
        "text": "nmap"
      },
      {
        "num": 2,
        "text": "vmstat"
      },
      {
        "num": 3,
        "text": "sar"
      },
      {
        "num": 4,
        "text": "iostat"
      }
    ],
    "answer": 3,
    "explanation": "시스템 전반에 걸친 성능지표를 수집, 레포트하고 저장하는 명령어는 'sar'(System Activity Reporter)입니다. sar는 CPU 사용률, 메모리 사용량, 디스크 I/O, 네트워크 통계 등 시스템의 다양한 성능 지표를 수집하고 보고합니다. 또한 과거 데이터를 저장하고 검색할 수 있는 기능도 제공합니다. 'nmap'은 네트워크 탐색 및 보안 감사 도구이고, 'vmstat'은 가상 메모리 통계를 보여주며, 'iostat'은 CPU 사용량과 디스크 I/O 통계를 보여주지만, sar만큼 포괄적이지 않습니다."
  },
  {
    "id": 515,
    "question": "Linux서버에서 iptables로 정책이 설정되어 있다. 설정된 정책을 삭제하기 위한 적절한 명령어는?",
    "example": [
      {
        "num": 1,
        "text": "iptables -A"
      },
      {
        "num": 2,
        "text": "iptables -F"
      },
      {
        "num": 3,
        "text": "iptables -G"
      },
      {
        "num": 4,
        "text": "iptables –W"
      }
    ],
    "answer": 2,
    "explanation": "Linux에서 iptables의 모든 설정된 정책을 삭제하기 위한 적절한 명령어는 'iptables -F'입니다. 여기서 '-F' 옵션은 'flush'를 의미하며, 이는 모든 체인의 규칙을 삭제합니다. '-A' 옵션은 새 규칙을 추가(append)하는 데 사용되고, '-G'는 체인 이름을 변경(rename)하는 데 사용됩니다. '-W'는 유효한 iptables 옵션이 아닙니다. 주의할 점은 'iptables -F' 명령어는 모든 규칙을 삭제하므로 신중하게 사용해야 합니다."
  },
  {
    "id": 516,
    "question": "일반적으로 DNS 쿼리에 대해 캐싱을 하여 이후 쿼리에 대해 빠르게 응답할 수 있도록 로컬 호스트에도 DNS 캐싱을 하게 되는데 DNS 캐싱을 하기 때문에 DNS가 변경된 경우에 잘못된 목적지를 찾아가게 되는 경우가 있다. 때문에 DNS캐시를 Flush하여야 하는데 Windows 서버에서 DNS를 Flush하기 위한 명령어는 무엇인가?",
    "example": [
      {
        "num": 1,
        "text": "network restart"
      },
      {
        "num": 2,
        "text": "ipconfig / flushdns"
      },
      {
        "num": 3,
        "text": "dns-clean"
      },
      {
        "num": 4,
        "text": "mdc restart"
      }
    ],
    "answer": 2,
    "explanation": "Windows 서버에서 DNS 캐시를 Flush하기 위한 명령어는 'ipconfig /flushdns'입니다. 이 명령어는 DNS 리졸버 캐시를 비우는 데 사용됩니다. DNS 캐시를 Flush하면 이전에 저장된 모든 DNS 조회 결과가 제거되어, 다음 DNS 쿼리 시 새로운 조회가 수행됩니다. 이는 DNS 변경 사항이 즉시 적용되도록 하거나 DNS 관련 문제를 해결하는 데 유용합니다. 'network restart', 'dns-clean', 'mdc restart'는 Windows에서 사용되는 유효한 명령어가 아닙니다."
  },
  {
    "id": 517,
    "question": "네이버클라우드 플랫폼에서 제공되는 웹 성능 측정 도구는 무엇인가?",
    "example": [
      {
        "num": 1,
        "text": "AB"
      },
      {
        "num": 2,
        "text": "ngrinder"
      },
      {
        "num": 3,
        "text": "topaz"
      },
      {
        "num": 4,
        "text": "loadrunner"
      }
    ],
    "answer": 2,
    "explanation": "네이버클라우드 플랫폼에서 제공되는 웹 성능 측정 도구는 'ngrinder'입니다. ngrinder는 스크립트 작성, 성능 테스트, 모니터링 및 결과 보고서 생성 기능을 제공하는 오픈소스 부하 테스트 도구입니다. 이 도구를 통해 사용자는 웹 애플리케이션의 성능을 측정하고, 병목 현상을 식별하며, 시스템의 확장성을 테스트할 수 있습니다. 'AB'(Apache Bench)는 Apache 웹 서버의 성능 측정 도구이고, 'topaz'와 'loadrunner'는 다른 회사에서 제공하는 성능 테스트 도구입니다."
  },
  {
    "id": 518,
    "question": "도메인에 맵핑된 IP를 확인할 수 있는 명령어를 고르시오.",
    "example": [
      {
        "num": 1,
        "text": "whois"
      },
      {
        "num": 2,
        "text": "nslookup"
      },
      {
        "num": 3,
        "text": "ipconfig"
      },
      {
        "num": 4,
        "text": "who"
      }
    ],
    "answer": 2,
    "explanation": "도메인에 매핑된 IP를 확인할 수 있는 명령어는 'nslookup'입니다. nslookup(Name Server Lookup)은 도메인 이름 시스템(DNS) 쿼리를 수행하여 도메인 이름, IP 주소, 메일 서버 등의 정보를 조회할 수 있는 네트워크 관리 명령어 도구입니다. 'whois'는 도메인 등록 정보를 조회하는 명령어이고, 'ipconfig'는 네트워크 구성 정보를 보여주는 Windows 명령어입니다. 'who'는 현재 시스템에 로그인한 사용자 정보를 보여주는 Unix/Linux 명령어로, 도메인 IP 조회와는 관련이 없습니다."
  },
  {
    "id": 519,
    "question": "아파치 웹서버 성능측정 툴인 ab의 여러 옵션들 중 프록시 서버를 사용해 요청할 수 있는 옵션은?",
    "example": [
      {
        "num": 1,
        "text": "n"
      },
      {
        "num": 2,
        "text": "x"
      },
      {
        "num": 3,
        "text": "g"
      },
      {
        "num": 4,
        "text": "t"
      }
    ],
    "answer": 2,
    "explanation": "Apache Bench(ab)에서 프록시 서버를 사용해 요청할 수 있는 옵션은 '-x'입니다. 이 옵션을 사용하면 ab가 지정된 프록시 서버를 통해 요청을 보내도록 설정할 수 있습니다. 사용 예: 'ab -x proxy.example.com:8080 http://www.target.com/'. 다른 옵션들의 의미는 다음과 같습니다: '-n'은 요청 수를 지정, '-t'는 벤치마크 실행 시간을 초 단위로 지정, '-g'는 결과를 GNU plot 파일로 출력합니다."
  },
  {
    "id": 520,
    "question": "네이버 클라우드 플랫폼의 DNS에서 레코드 값을 바꾸었으나 반영이 되지 않는다면 어떤 설정을 의심해야 하는가?",
    "example": [
      {
        "num": 1,
        "text": "레코드 타입"
      },
      {
        "num": 2,
        "text": "TTL"
      },
      {
        "num": 3,
        "text": "레코드값"
      },
      {
        "num": 4,
        "text": "레코드명"
      }
    ],
    "answer": 2,
    "explanation": "DNS 레코드 값을 변경했음에도 반영이 되지 않는 경우, 가장 먼저 의심해봐야 할 설정은 TTL(Time To Live)입니다. TTL은 DNS 레코드가 캐시에 저장되는 시간을 지정합니다. TTL 값이 크게 설정되어 있다면, DNS 서버나 로컬 DNS 캐시가 오래된 정보를 계속 사용할 수 있습니다. 따라서 DNS 변경 사항을 빠르게 반영하고 싶다면, TTL 값을 낮게 설정하는 것이 좋습니다. 변경 전에 TTL을 낮추고, 변경 후 다시 원래대로 되돌리는 것이 일반적인 방법입니다."
  },
  {
    "id": 521,
    "question": "SSL VPN에 접속하여 Management Console을 이용하여 서버를 새로 생성하고 생성된 서버는 기존에 SSL VPN 접속이 가능한 ACG에 속하도록 하여 생성했는데 새로 생성한 서버만 접근이 되지 않는다. 원인과 해결 방법은 무엇인가?",
    "example": [
      {
        "num": 1,
        "text": "SSLVPN 캐시 문제로 SSL VPN을 재접속한다."
      },
      {
        "num": 2,
        "text": "웹 브라우저 캐시 문제로 웹 브라우저를 재시작한다."
      },
      {
        "num": 3,
        "text": "SSL VPN 라우팅 문제로 SSL VPN을 재접속 한다."
      },
      {
        "num": 4,
        "text": "ACG에서 SSL VPN 대역이 포함되어 있지 않아서 발생한 문제로 ACG에 SSL VPN대역을 추가한다."
      }
    ],
    "answer": 4,
    "explanation": "새로 생성한 서버에만 접근이 되지 않는 문제의 가장 가능성 높은 원인은 ACG(Access Control Group)에 SSL VPN 대역이 포함되어 있지 않기 때문입니다. ACG는 인스턴스 단위로 적용되는 가상 방화벽으로, 인바운드와 아웃바운드 트래픽을 제어합니다. 새로 생성된 서버가 기존 ACG에 속하더라도, 해당 ACG에 SSL VPN 대역에 대한 접근 허용 규칙이 없다면 SSL VPN을 통한 접근이 불가능합니다. 해결 방법은 해당 ACG에 SSL VPN 대역을 추가하여 접근을 허용하는 것입니다. 이렇게 하면 SSL VPN을 통해 새로 생성된 서버에 접근할 수 있게 됩니다."
  },
  {
    "id": 522,
    "question": "웹서비스 성능을 측정할 수 있는 툴로 적합하지 않는 것을 고르시오.",
    "example": [
      {
        "num": 1,
        "text": "ngrinder"
      },
      {
        "num": 2,
        "text": "Percona TPCC"
      },
      {
        "num": 3,
        "text": "ab"
      },
      {
        "num": 4,
        "text": "Web service Monitoring System"
      }
    ],
    "answer": 2,
    "explanation": "웹서비스 성능을 측정하는 도구로 적합하지 않은 것은 'Percona TPCC'입니다. Percona TPCC는 주로 데이터베이스, 특히 MySQL의 성능을 측정하는 벤치마크 도구입니다. 웹서비스 전체의 성능을 측정하는 데는 적합하지 않습니다. 반면, 'ngrinder'는 네이버에서 개발한 부하 테스트 도구로 웹 애플리케이션의 성능을 측정할 수 있습니다. 'ab'(Apache Bench)는 웹서버의 성능을 측정하는 간단한 벤치마킹 도구입니다. 'Web service Monitoring System'은 웹서비스의 성능을 모니터링하고 측정하는 일반적인 시스템을 가리킵니다."
  },
  {
    "id": 523,
    "question": "syslogd에 대한 설명으로 틀린것은?",
    "example": [
      {
        "num": 1,
        "text": "로그를 수집하는 데몬"
      },
      {
        "num": 2,
        "text": "UDP프로토콜의 514번 포트를 사용한다."
      },
      {
        "num": 3,
        "text": "클라이언트는 클라이언트 프로그램을 이용하여야 한다."
      },
      {
        "num": 4,
        "text": "기본적으로 /var/log/messages에 로그를 기록한다."
      }
    ],
    "answer": 3,
    "explanation": "syslogd에 대한 설명 중 틀린 것은 '클라이언트는 클라이언트 프로그램을 이용하여야 한다'입니다. 실제로 syslog 프로토콜을 지원하는 모든 프로그램은 syslogd에 로그를 보낼 수 있습니다. 특별한 클라이언트 프로그램이 필요하지 않습니다. 대부분의 유닉스/리눅스 시스템 프로그램들은 기본적으로 syslog를 지원합니다. 나머지 설명들은 모두 정확합니다. syslogd는 로그를 수집하는 데몬이며, 기본적으로 UDP 514 포트를 사용합니다. 또한 기본적으로 시스템 로그를 /var/log/messages 파일에 기록합니다."
  },
  {
    "id": 524,
    "question": "SSH에서 root 원격 접속을 막고자 할 때 사용하는 옵션은?",
    "example": [
      {
        "num": 1,
        "text": "AllowRootLogin NO"
      },
      {
        "num": 2,
        "text": "DenyRootLogin YES"
      },
      {
        "num": 3,
        "text": "PermitRootLogin YES"
      },
      {
        "num": 4,
        "text": "PermitRootLogin NO"
      }
    ],
    "answer": 4,
    "explanation": "SSH에서 root 계정의 원격 접속을 막고자 할 때 사용하는 옵션은 'PermitRootLogin NO'입니다. 이 설정은 SSH 서버의 설정 파일인 /etc/ssh/sshd_config에서 변경할 수 있습니다. 'PermitRootLogin NO'로 설정하면 root 계정으로의 직접적인 SSH 접속이 불가능해집니다. 이는 보안을 강화하는 중요한 방법 중 하나로, 대신 일반 사용자 계정으로 로그인한 후 필요시 su나 sudo를 사용하여 root 권한을 얻는 것이 권장됩니다. 'AllowRootLogin NO'와 'DenyRootLogin YES'는 실제 SSH 설정 옵션이 아니며, 'PermitRootLogin YES'는 root 로그인을 허용하는 설정입니다."
  },
  {
    "id": 525,
    "question": "Java 분산서비스 및 시스템의 지속적인 성능분석을 제공하여, 오류발생 가능성에 대한 진단과 추적을 지원하는 플랫폼 서비스 상품의 이름은?",
    "example": [
      {
        "num": 1,
        "text": "Pinpoint"
      },
      {
        "num": 2,
        "text": "API Gateway"
      },
      {
        "num": 3,
        "text": "SENS"
      },
      {
        "num": 4,
        "text": "WMS"
      }
    ],
    "answer": 1,
    "explanation": "Java 분산 시스템의 성능 분석, 오류 진단 및 추적을 지원하는 네이버 클라우드 플랫폼의 서비스는 'Pinpoint'입니다. Pinpoint는 대규모 분산 시스템의 성능을 분석하고 문제를 진단하는 APM(Application Performance Management) 도구입니다. 이 도구는 분산 트랜잭션 추적, 실시간 애플리케이션 토폴로지 확인, 서버 리소스 모니터링 등의 기능을 제공합니다. 'API Gateway'는 API 관리 및 보안 서비스이고, 'SENS'는 알림 메시지 발송 서비스이며, 'WMS'는 웹 서비스 모니터링 시스템을 의미할 수 있지만 네이버 클라우드 플랫폼의 공식 서비스명은 아닙니다."
  },
  {
    "id": 526,
    "question": "다음 명령어 중 목적이 다른 하나는?",
    "example": [
      {
        "num": 1,
        "text": "top"
      },
      {
        "num": 2,
        "text": "ps"
      },
      {
        "num": 3,
        "text": "sar"
      },
      {
        "num": 4,
        "text": "proc"
      }
    ],
    "answer": 4,
    "explanation": "이 목록에서 목적이 다른 하나는 'proc'입니다. 'top', 'ps', 'sar'는 모두 시스템 성능 모니터링과 관련된 명령어인 반면, 'proc'는 명령어가 아니라 리눅스 파일 시스템의 일부입니다. '/proc'는 프로세스 정보 파일시스템으로, 시스템과 프로세스의 정보를 제공하는 가상 파일시스템입니다. 'top'은 실시간으로 시스템의 프로세스와 리소스 사용량을 보여주고, 'ps'는 현재 실행 중인 프로세스의 스냅샷을 제공하며, 'sar'는 시스템 활동 보고서를 생성하는 도구입니다."
  },
  {
    "id": 527,
    "question": "WWW.ncloud.com 은 Apache를 사용하고 있다. http://www.ncloud.com 을 웹 브라우저에서 접근하면 index.php를 기본으로 보여주고자 할 때 어느 부분을 변경하여야 하는가?",
    "example": [
      {
        "num": 1,
        "text": "DocumentRoot"
      },
      {
        "num": 2,
        "text": "Include"
      },
      {
        "num": 3,
        "text": "AccessConfig"
      },
      {
        "num": 4,
        "text": "Directorylndex Paas"
      }
    ],
    "answer": 4,
    "explanation": "Apache 웹 서버에서 기본 인덱스 파일을 'index.php'로 설정하려면 'DirectoryIndex' 지시어를 변경해야 합니다. 'DirectoryIndex'는 디렉토리에 접근했을 때 기본적으로 보여줄 파일의 순서를 지정합니다. Apache 설정 파일(일반적으로 httpd.conf 또는 apache2.conf)에서 'DirectoryIndex index.html index.htm index.php'와 같이 설정하면 됩니다. 여기서 'Paas'는 오타로 보이며, 실제로는 'DirectoryIndex'를 의미할 것입니다. 'DocumentRoot'는 웹 문서의 루트 디렉토리를 지정하고, 'Include'는 다른 설정 파일을 포함시키며, 'AccessConfig'는 유효한 Apache 지시어가 아닙니다."
  },
  {
    "id": 528,
    "question": "Linux 서버에서 iptables로 정책이 설정되어 있다. 어떤 정책이 설정되어 있는지 확인하고자 하는 경우 적합한 명령어는 무엇인가?",
    "example": [
      {
        "num": 1,
        "text": "iptables -A"
      },
      {
        "num": 2,
        "text": "iptables -T"
      },
      {
        "num": 3,
        "text": "iptables -L"
      },
      {
        "num": 4,
        "text": "iptables -N"
      }
    ],
    "answer": 3,
    "explanation": "Linux 서버에서 iptables의 현재 설정된 정책을 확인하기 위한 적합한 명령어는 'iptables -L'입니다. 여기서 '-L' 옵션은 'List'를 의미하며, 현재 설정된 모든 규칙을 체인별로 나열합니다. 더 자세한 정보를 보려면 'iptables -L -v'를 사용할 수 있습니다. 'iptables -A'는 새 규칙을 추가(Append)하는 데 사용되고, 'iptables -N'은 새 체인을 생성(New chain)하는 데 사용됩니다. 'iptables -T'는 유효한 iptables 옵션이 아닙니다."
  },
  {
    "id": 529,
    "question": "MySQL 성능측정 도구가 아닌 것은?",
    "example": [
      {
        "num": 1,
        "text": "Percona TPCC"
      },
      {
        "num": 2,
        "text": "workbench"
      },
      {
        "num": 3,
        "text": "Apache Jmeter"
      },
      {
        "num": 4,
        "text": "sysbench"
      }
    ],
    "answer": 2,
    "explanation": "MySQL 성능측정 도구가 아닌 것은 'workbench'입니다. MySQL Workbench는 데이터베이스 설계, 개발, 관리를 위한 통합 개발 환경(IDE)이지만, 직접적인 성능 측정 도구는 아닙니다. 반면, Percona TPCC는 MySQL의 OLTP 성능을 측정하는 벤치마크 도구이고, Apache JMeter는 다양한 프로토콜/서버에 대한 부하 테스트 도구로 MySQL 성능 테스트에도 사용될 수 있습니다. sysbench는 MySQL을 포함한 다양한 데이터베이스 시스템의 성능을 측정하는 다목적 벤치마크 도구입니다."
  },
  {
    "id": 530,
    "question": "실 서비스 투입 전 리얼환경과 유사환경 구현 후 서버가 수용할 수 있는 사용자(vuser)를 확인할 수 있는 부하테스트를 위한 툴 이름을 고르시오.",
    "example": [
      {
        "num": 1,
        "text": "ab"
      },
      {
        "num": 2,
        "text": "nGrinder"
      },
      {
        "num": 3,
        "text": "Pinpoint"
      },
      {
        "num": 4,
        "text": "Web Service Monitoring System(WMS)"
      }
    ],
    "answer": 2,
    "explanation": "실 서비스 투입 전 리얼 환경과 유사한 환경에서 서버의 수용 가능한 사용자(vuser) 수를 확인하기 위한 부하 테스트 툴은 'nGrinder'입니다. nGrinder는 네이버에서 개발한 오픈소스 부하 테스트 도구로, 대규모 분산 테스트를 지원합니다. 이 도구는 스크립트 작성, 성능 테스트 수행, 모니터링, 결과 보고서 생성 등의 기능을 제공하며, 실제 서비스 환경과 유사한 조건에서 테스트를 수행할 수 있습니다. 'ab'(Apache Bench)는 간단한 웹서버 벤치마킹 도구이고, 'Pinpoint'는 애플리케이션 성능 모니터링 도구이며, 'WMS'는 일반적인 웹 서비스 모니터링 시스템을 의미합니다."
  },
  {
    "id": 531,
    "question": "서버의 CPU가 100%를 사용하면서 서비스가 정상적이지 못하다. 어떤 파일이 100%를 사용하는지 확인하기 위한 리눅스 명령어는 무엇인가?",
    "example": [
      {
        "num": 1,
        "text": "Is"
      },
      {
        "num": 2,
        "text": "top"
      },
      {
        "num": 3,
        "text": "proc"
      },
      {
        "num": 4,
        "text": "lsof"
      }
    ],
    "answer": 2,
    "explanation": "서버의 CPU 사용률이 100%인 상황에서 어떤 프로세스가 CPU를 과도하게 사용하는지 확인하기 위한 가장 적합한 리눅스 명령어는 'top'입니다. top 명령어는 시스템의 전반적인 상태와 실시간으로 프로세스들의 리소스 사용 현황을 보여줍니다. CPU 사용률이 높은 프로세스를 쉽게 식별할 수 있으며, 기본적으로 CPU 사용률 순으로 정렬되어 표시됩니다. 'ls'는 파일 목록을 보여주는 명령어이고, 'proc'는 프로세스 정보 파일시스템이며, 'lsof'는 열린 파일 목록을 보여주는 명령어로, CPU 사용률을 직접적으로 보여주지는 않습니다."
  },
  {
    "id": 532,
    "question": "리눅스 서버를 운영중에 동접이 2000 정도에서 더 이상 새로운 접속을 맺을 수 없는 현상을 발견하였다. 어느 부분을 의심하여야 할까?",
    "example": [
      {
        "num": 1,
        "text": "ACG"
      },
      {
        "num": 2,
        "text": "/etc/sysctl.conf 파일에서 최대 오픈 파일 수 확인"
      },
      {
        "num": 3,
        "text": "/etc/sysctl.conf 파일에서 최대 접속 가능 범위확인"
      },
      {
        "num": 4,
        "text": "Apache의 MAX Client 확인"
      }
    ],
    "answer": 4,
    "explanation": "리눅스 서버에서 동시 접속자 수가 2000명 정도에서 더 이상 새로운 접속을 맺을 수 없는 현상이 발생했다면, Apache 웹 서버의 MaxClients 설정을 의심해 볼 수 있습니다. MaxClients(Apache 2.4 이후 버전에서는 MaxRequestWorkers)는 동시에 서비스할 수 있는 최대 클라이언트 수를 지정하는 Apache 설정입니다. 이 값이 2000으로 설정되어 있다면, 2000개 이상의 동시 연결을 처리할 수 없게 됩니다. 이 설정은 Apache 설정 파일(보통 httpd.conf 또는 apache2.conf)에서 확인하고 조정할 수 있습니다. 다만, 이 값을 무작정 높이는 것은 서버의 리소스 사용량을 증가시킬 수 있으므로, 서버의 하드웨어 성능을 고려하여 적절히 조정해야 합니다."
  },
  {
    "id": 533,
    "question": "현재 서버에 연결된 커넥션의 갯수를 확인할 수 있는 명령어는?",
    "example": [
      {
        "num": 1,
        "text": "netstat"
      },
      {
        "num": 2,
        "text": "tcpdump"
      },
      {
        "num": 3,
        "text": "ethtool"
      },
      {
        "num": 4,
        "text": "route"
      }
    ],
    "answer": 1,
    "explanation": "현재 서버에 연결된 커넥션의 개수를 확인할 수 있는 가장 적합한 명령어는 'netstat'입니다. netstat(network statistics)는 네트워크 연결 상태, 라우팅 테이블, 인터페이스 통계 등을 보여주는 명령어 도구입니다. 특히 'netstat -an | grep ESTABLISHED | wc -l' 명령을 사용하면 현재 활성화된(ESTABLISHED) 연결의 개수를 확인할 수 있습니다. 'tcpdump'는 네트워크 패킷을 캡처하고 분석하는 도구이고, 'ethtool'은 네트워크 인터페이스 카드의 설정을 확인하고 변경하는 도구이며, 'route'는 IP 라우팅 테이블을 보여주거나 수정하는 명령어로, 직접적으로 연결된 커넥션의 개수를 보여주지는 않습니다."
  },
  {
    "id": 534,
    "question": "다음중 성격이 다른 서비스는?",
    "example": [
      {
        "num": 1,
        "text": "sftp"
      },
      {
        "num": 2,
        "text": "samba"
      },
      {
        "num": 3,
        "text": "nfs"
      },
      {
        "num": 4,
        "text": "gopher"
      }
    ],
    "answer": 4,
    "explanation": "이 목록에서 성격이 다른 서비스는 'gopher'입니다. sftp(Secure File Transfer Protocol), samba, nfs(Network File System)는 모두 파일 공유 또는 파일 전송과 관련된 프로토콜이나 서비스입니다. 반면, gopher는 초기 인터넷에서 사용된 정보 검색 시스템으로, 현재는 거의 사용되지 않습니다. sftp는 SSH를 통한 안전한 파일 전송 프로토콜이고, samba는 Windows와 Unix/Linux 시스템 간의 파일 및 프린터 공유를 위한 프로토콜이며, nfs는 네트워크를 통해 파일 시스템을 공유하는 프로토콜입니다. gopher는 이들과 달리 파일 공유나 전송이 주 목적이 아닌, 텍스트 기반의 인터넷 프로토콜이었습니다."
  },
  {
    "id": 535,
    "question": "윈도우 서버의 Process Crash, Memory Leak패턴을 확인하는 디버그 도구는 무엇인가?",
    "example": [
      {
        "num": 1,
        "text": "Debug"
      },
      {
        "num": 2,
        "text": "PAL(Performance Analysis of Logs Tool)"
      },
      {
        "num": 3,
        "text": "xPerf"
      },
      {
        "num": 4,
        "text": "Message Analyzer"
      }
    ],
    "answer": 1,
    "explanation": "윈도우 서버의 Process Crash와 Memory Leak 패턴을 확인하는 주요 디버그 도구는 'Debug Diag'(Debug Diagnostics Tool)입니다. Debug Diag는 Microsoft에서 제공하는 무료 트러블슈팅 도구로, 응용 프로그램 충돌, 느린 성능, 메모리 및 핸들 누수 등의 문제를 진단하는 데 사용됩니다. 이 도구는 크래시 덤프를 분석하고, 메모리 사용량을 모니터링하며, 다양한 성능 문제를 진단할 수 있습니다. PAL은 성능 로그 분석 도구이고, xPerf는 Windows Performance Toolkit의 일부로 성능 추적에 사용되며, Message Analyzer는 네트워크 트래픽 분석 도구입니다. 이들은 모두 유용한 도구이지만, Process Crash와 Memory Leak 패턴 분석에는 Debug Diag가 가장 적합합니다."
  },
  {
    "id": 536,
    "question": "NCP에 구성한 웹사이트의 지연이 발생하고 있는 상황에서 해당 원인을 파악하기 위해 사용 가능한 NCP 상품으로 적절한 것은?",
    "example": [
      {
        "num": 1,
        "text": "Web Service Monitoring System"
      },
      {
        "num": 2,
        "text": "Cloud Log Analytics"
      },
      {
        "num": 3,
        "text": "nGrinder"
      },
      {
        "num": 4,
        "text": "Network Traffic Monitoring"
      }
    ],
    "answer": 4,
    "explanation": "NCP(네이버 클라우드 플랫폼)에서 웹사이트 지연의 원인을 파악하기 위해 가장 적절한 상품은 'Network Traffic Monitoring'입니다. 이 서비스는 네트워크 트래픽을 실시간으로 모니터링하고 분석할 수 있게 해줍니다. 네트워크 트래픽 패턴, 대역폭 사용량, 프로토콜별 사용량 등을 확인할 수 있어 네트워크 관련 지연 문제의 원인을 파악하는 데 유용합니다. 'Web Service Monitoring System'은 웹 서비스의 가용성과 응답 시간을 모니터링하는 데 사용되지만, 네트워크 수준의 상세한 분석은 제공하지 않습니다. 'Cloud Log Analytics'는 로그 분석에 유용하지만 실시간 네트워크 문제 진단에는 제한적일 수 있습니다. 'nGrinder'는 부하 테스트 도구로, 지연 원인 파악보다는 성능 테스트에 더 적합합니다."
  },
  {
    "id": 537,
    "question": "리눅스 서버를 운영 중 Too many Open files라는 에러가 발생하였습니다. 이 때 변경이 필요한 설정 파일은?",
    "example": [
      {
        "num": 1,
        "text": "syslog.conf"
      },
      {
        "num": 2,
        "text": "mailx.conf"
      },
      {
        "num": 3,
        "text": "sysctl.conf"
      },
      {
        "num": 4,
        "text": "session.conf"
      }
    ],
    "answer": 3,
    "explanation": "'Too many Open files' 에러가 발생했을 때 변경이 필요한 설정 파일은 'sysctl.conf'입니다. 이 파일은 Linux 커널 파라미터를 설정하는 데 사용됩니다. 'Too many Open files' 에러는 프로세스가 동시에 열 수 있는 파일 디스크립터의 최대 수를 초과했을 때 발생합니다. 이를 해결하기 위해 /etc/sysctl.conf 파일에서 fs.file-max 값을 증가시킬 수 있습니다. 예를 들어, 'fs.file-max = 65536'과 같이 설정할 수 있습니다. 변경 후에는 'sysctl -p' 명령어로 변경사항을 적용해야 합니다. 'syslog.conf'는 시스템 로깅 설정, 'mailx.conf'는 메일 클라이언트 설정, 'session.conf'는 일반적으로 사용되지 않는 파일명입니다."
  },
  {
    "id": 538,
    "question": "여러명의 사람들이 공통의 네이버 클라우드 플랫폼 인프라 환경을 이용하고 있다. 누군가 실수로 운영중인 서버를 반납하였다. 다음과 같은 사태를 막고자 할 때 사용 할 수 있는 방법은?",
    "example": [
      {
        "num": 1,
        "text": "중요 서버들은 서버관리 및 설정변경에서 반납보호를 설정한다."
      },
      {
        "num": 2,
        "text": "실수한 사람을 문책한다."
      },
      {
        "num": 3,
        "text": "서버 이름에 반납 금지를 표기한다."
      },
      {
        "num": 4,
        "text": "Resource Manager에서 중요 서버를 설정한다."
      }
    ],
    "answer": 1,
    "explanation": "네이버 클라우드 플랫폼에서 중요 서버의 실수로 인한 반납을 방지하기 위해 사용할 수 있는 가장 효과적인 방법은 '서버관리 및 설정변경에서 반납보호를 설정'하는 것입니다. 이 기능을 활성화하면 해당 서버를 반납하려 할 때 추가적인 확인 절차가 필요하게 되어 실수로 인한 서버 반납을 효과적으로 방지할 수 있습니다. '실수한 사람을 문책하는 것'은 사후 대책일 뿐 예방책이 되지 않습니다. '서버 이름에 반납 금지를 표기하는 것'은 주의를 환기시킬 수 있지만 시스템적인 방지책은 아닙니다. 'Resource Manager에서 중요 서버를 설정'하는 것은 네이버 클라우드 플랫폼의 실제 기능이 아닙니다."
  },
  {
    "id": 539,
    "question": "리눅스에서 네트워크 트래픽을 확인할 수 있는 명령어를 모두 고르시오.",
    "example": [
      {
        "num": 1,
        "text": "netstat -i"
      },
      {
        "num": 2,
        "text": "ifconfig"
      },
      {
        "num": 3,
        "text": "netconfig"
      },
      {
        "num": 4,
        "text": "network"
      }
    ],
    "answer": [1, 2],
    "explanation": "리눅스에서 네트워크 트래픽을 확인할 수 있는 명령어는 'netstat -i'와 'ifconfig'입니다. 'netstat -i'는 네트워크 인터페이스의 통계 정보를 보여주며, 각 인터페이스의 RX(수신) 및 TX(송신) 패킷 수, 오류, 드롭된 패킷 등의 정보를 제공합니다. 'ifconfig'는 네트워크 인터페이스의 구성 정보와 함께 RX 및 TX 바이트, 패킷, 오류 등의 기본적인 트래픽 통계를 보여줍니다. 'netconfig'는 일반적으로 네트워크 구성을 위한 도구이며 트래픽 정보를 직접 보여주지 않습니다. 'network'는 리눅스의 표준 명령어가 아닙니다."
  },
  {
    "id": 540,
    "question": "Linux에서 볼륨의 UUID를 확인하는 명령어는 무엇인가요?",
    "example": [
      {
        "num": 1,
        "text": "uuid"
      },
      {
        "num": 2,
        "text": "lsuuid"
      },
      {
        "num": 3,
        "text": "blkid"
      },
      {
        "num": 4,
        "text": "df"
      }
    ],
    "answer": 3,
    "explanation": "Linux에서 볼륨의 UUID(Universally Unique Identifier)를 확인하는 명령어는 'blkid'입니다. blkid는 블록 장치(예: 하드 디스크 파티션, USB 드라이브 등)의 속성을 표시하는 유틸리티로, UUID를 포함한 다양한 정보를 제공합니다. 예를 들어, 'sudo blkid' 명령을 실행하면 시스템의 모든 블록 장치와 그들의 UUID를 볼 수 있습니다. 'uuid'와 'lsuuid'는 실제 Linux 명령어가 아닙니다. 'df'는 디스크 사용량을 보여주는 명령어로, UUID 정보는 제공하지 않습니다."
  },
  {
    "id": 541,
    "question": "김초록씨가 운영중인 web001 서버의 OS 스토리지에 문제가 발생하였습니다. 중요한 데이터가 OS 스토리지에 위치하여 난감한 상황입니다. 데이터를 정상적으로 추출하기 위한 작업으로 올바른 순서는? (1) Web001 서버의 내 서버 이미지를 생성 (2) Web001 서버의 OS 스토리지를 대상으로 스냅샷을 생성 (3) 스냅샷을 가지고 스토리지 생성 (4) 내 서버 이미지를 가지고 스토리지 생성 (5) Web002 서버에 Web001 OS 스토리지 부착 (6) Uuid 를 새롭게 생성하고 web001 OS 스토리지의 uuid를 변경 (7) web002 서버에 디렉터리를 하나 생성 후, web001 OS 스토리지를 마운트",
    "example": [
      {
        "num": 1,
        "text": "(1) → (4) → (5) → (7)"
      },
      {
        "num": 2,
        "text": "(2) → (3) → (5) → (7)"
      },
      {
        "num": 3,
        "text": "(1) → (4) → (5) → (6) → (7)"
      },
      {
        "num": 4,
        "text": "(2) → (3) → (5) → (6) → (7)"
      }
    ],
    "answer": 4,
    "explanation": "OS 스토리지에 문제가 발생했을 때 데이터를 추출하기 위한 올바른 순서는 (2) → (3) → (5) → (6) → (7)입니다. 이 과정을 설명하면 다음과 같습니다:\n(2) Web001 서버의 OS 스토리지를 대상으로 스냅샷을 생성합니다. 이는 현재 상태의 데이터를 보존하는 안전한 방법입니다.\n(3) 생성된 스냅샷을 이용해 새로운 스토리지를 생성합니다.\n(5) 새로 생성한 스토리지를 Web002 서버(정상 작동하는 다른 서버)에 부착합니다.\n(6) 새로 부착한 스토리지의 UUID를 변경합니다. 이는 기존 OS와의 충돌을 방지하기 위함입니다.\n(7) Web002 서버에 디렉토리를 생성하고 새로 부착한 스토리지를 마운트합니다.\n이 방법을 통해 문제가 있는 OS 스토리지의 데이터에 안전하게 접근하고 추출할 수 있습니다."
  },
  {
    "id": 542,
    "question": "서버생성 시, init scrip를 적용하였으나 제대로 반영이 되지 않은 것 같은 경우 init script에 대한 로그를 확인할 수 있는 경로로 알맞은 것은? (리눅스 기준)",
    "example": [
      {
        "num": 1,
        "text": "/var/log/ncloud.log"
      },
      {
        "num": 2,
        "text": "/var/log/ncloud/init.log"
      },
      {
        "num": 3,
        "text": "/var/log/ncloud/initscript.log"
      },
      {
        "num": 4,
        "text": "/var/log/ncloud-init.log"
      }
    ],
    "answer": 4,
    "explanation": "네이버 클라우드 플랫폼의 리눅스 서버에서 init script의 로그를 확인할 수 있는 올바른 경로는 '/var/log/ncloud-init.log'입니다. 이 로그 파일에는 서버 생성 시 실행되는 초기화 스크립트의 실행 결과와 관련된 정보가 기록됩니다. init script가 제대로 반영되지 않았다고 의심될 때, 이 로그 파일을 확인하면 스크립트 실행 과정에서 발생한 오류나 문제점을 파악할 수 있습니다. 다른 옵션들(/var/log/ncloud.log, /var/log/ncloud/init.log, /var/log/ncloud/initscript.log)은 네이버 클라우드 플랫폼의 표준 로그 경로가 아닙니다."
  },
  {
    "id": 543,
    "question": "리눅스 서버에서 서버의 자체 네트워크에 문제가 없는 것을 확인하려 합니다. 스스로에게 5번 ping을 날리고자 할 때 올바른 명령어는?",
    "example": [
      {
        "num": 1,
        "text": "ping -n 5 localhost"
      },
      {
        "num": 2,
        "text": "ping -c 5 localhost"
      },
      {
        "num": 3,
        "text": "ping -I localhost"
      },
      {
        "num": 4,
        "text": "ping -t 5 localhost"
      }
    ],
    "answer": 2,
    "explanation": "리눅스 서버에서 자체 네트워크에 문제가 없는지 확인하기 위해 localhost에 5번 ping을 보내는 올바른 명령어는 'ping -c 5 localhost'입니다. 여기서 '-c' 옵션은 'count'를 의미하며, 지정된 횟수만큼 ping을 보냅니다. 'localhost'는 자기 자신을 가리키는 호스트명입니다. 'ping -n 5 localhost'는 Windows 시스템에서 사용되는 형식입니다. 'ping -I localhost'에서 '-I' 옵션은 인터페이스를 지정하는 데 사용되며, 횟수를 지정하지 않습니다. 'ping -t 5 localhost'에서 '-t' 옵션은 리눅스의 ping 명령어에서 TTL(Time To Live)을 설정하는 데 사용되며, 횟수를 지정하지 않습니다."
  },
  {
    "id": 544,
    "question": "기존 UUID에서 새로운 UUID로 변경하기 위한 명령어는 무엇인가요?",
    "example": [
      {
        "num": 1,
        "text": "update"
      },
      {
        "num": 2,
        "text": "updateuuid"
      },
      {
        "num": 3,
        "text": "tune2fs"
      },
      {
        "num": 4,
        "text": "fdisk"
      }
    ],
    "answer": 3,
    "explanation": "리눅스에서 파일 시스템의 UUID를 변경하기 위한 명령어는 'tune2fs'입니다. tune2fs는 ext2, ext3, ext4 파일 시스템의 다양한 파라미터를 조정하는 데 사용되는 유틸리티입니다. UUID를 변경하려면 'sudo tune2fs -U random /dev/sdXY' 명령을 사용할 수 있습니다. 여기서 'random'은 새로운 무작위 UUID를 생성하라는 의미이며, '/dev/sdXY'는 UUID를 변경하려는 파티션을 나타냅니다. 'update'와 'updateuuid'는 실제 리눅스 명령어가 아닙니다. 'fdisk'는 디스크 파티션 테이블을 조작하는 도구이지만 UUID를 직접 변경하는 기능은 없습니다."
  },
  {
    "id": 545,
    "question": "Linux 서버에서 일반적인 시스템 로그를 저장하는 로그파일은 무엇인가요?",
    "example": [
      {
        "num": 1,
        "text": "/var/log/messages"
      },
      {
        "num": 2,
        "text": "/var/log /wtmp"
      },
      {
        "num": 3,
        "text": "/var/log/dmesg"
      },
      {
        "num": 4,
        "text": "/var/log/secure"
      }
    ],
    "answer": 1,
    "explanation": "Linux 서버에서 일반적인 시스템 로그를 저장하는 주요 로그 파일은 '/var/log/messages'입니다. 이 파일은 시스템의 전반적인 메시지 로그를 포함하며, 커널, 시스템 서비스, 애플리케이션 등의 다양한 소스로부터의 로그 메시지를 저장합니다. 시스템 관리자가 시스템의 전반적인 상태와 이벤트를 모니터링하는 데 중요한 파일입니다. '/var/log/wtmp'는 사용자 로그인/로그아웃 기록을 저장하고, '/var/log/dmesg'는 시스템 부팅 시 커널 메시지를 저장하며, '/var/log/secure'는 인증 관련 로그를 저장합니다. 이들은 모두 중요하지만, 일반적인 시스템 로그의 주 저장소는 '/var/log/messages'입니다."
  },
  {
    "id": 546,
    "question": "Linux 서버에서 외부에서의 접근 시도에 대한 로그를 저장하는 로그파일은 무엇인가요?",
    "example": [
      {
        "num": 1,
        "text": "/var/log/messages"
      },
      {
        "num": 2,
        "text": "/var/log/wtmp"
      },
      {
        "num": 3,
        "text": "/var/log/access"
      },
      {
        "num": 4,
        "text": "/var/log/secure"
      }
    ],
    "answer": 4,
    "explanation": "Linux 서버에서 외부에서의 접근 시도에 대한 로그를 주로 저장하는 파일은 '/var/log/secure'입니다. 이 로그 파일은 인증 및 권한 부여와 관련된 이벤트를 기록합니다. SSH 로그인 시도, su 또는 sudo 명령 사용, 기타 인증 관련 활동 등이 이 파일에 기록됩니다. 따라서 외부에서의 접근 시도, 특히 인증과 관련된 시도들을 모니터링하고 분석하는 데 중요한 파일입니다. '/var/log/messages'는 일반적인 시스템 메시지를, '/var/log/wtmp'는 사용자 로그인/로그아웃 기록을 저장합니다. '/var/log/access'는 일반적인 Linux 시스템의 기본 로그 파일은 아니지만, 웹 서버 등 특정 애플리케이션에서 사용할 수 있습니다."
  },
  {
    "id": 547,
    "question": "새로운 UUID를 적용하기 위해 UUID를 생성해야 합니다. 새로운 UUID를 생성하기 위한 명령어는 무엇인가요?",
    "example": [
      {
        "num": 1,
        "text": "uuid"
      },
      {
        "num": 2,
        "text": "blkid"
      },
      {
        "num": 3,
        "text": "uuidgen"
      },
      {
        "num": 4,
        "text": "makeuuid"
      }
    ],
    "answer": 3,
    "explanation": "새로운 UUID(Universally Unique Identifier)를 생성하기 위한 Linux 명령어는 'uuidgen'입니다. 이 명령어는 새로운 128비트 UUID를 생성합니다. 사용 방법은 간단히 터미널에 'uuidgen'을 입력하면 됩니다. 이 명령어는 각 실행마다 고유한 UUID를 생성하므로, 파일 시스템, 파티션, 또는 기타 시스템 리소스에 고유한 식별자가 필요할 때 유용합니다. 'uuid'는 실제 명령어가 아니며, 'blkid'는 블록 장치의 속성(UUID 포함)을 표시하는 명령어이지만 새 UUID를 생성하지는 않습니다. 'makeuuid'는 표준 Linux 명령어가 아닙니다."
  },
  {
    "id": 548,
    "question": "리눅스 서버에서 이전에 발생한 리소스 관련 로그를 확인하고자 합니다. 가능한 모든 정보를 확인하고자 할 경우, 다음 중 가장 올바른 명령어는?",
    "example": [
      {
        "num": 1,
        "text": "sar -I"
      },
      {
        "num": 2,
        "text": "sar -a"
      },
      {
        "num": 3,
        "text": "sar -A"
      },
      {
        "num": 4,
        "text": "sar -L"
      }
    ],
    "answer": 3,
    "explanation": "리눅스 서버에서 이전에 발생한 모든 리소스 관련 로그를 확인하기 위한 가장 적절한 명령어는 'sar -A'입니다. SAR(System Activity Reporter)는 시스템 활동을 보고하는 유틸리티입니다. '-A' 옵션은 'All'을 의미하며, 이 옵션을 사용하면 모든 가능한 리포트를 생성합니다. 이는 CPU 사용률, 메모리 사용량, 디스크 I/O, 네트워크 통계 등 시스템의 거의 모든 성능 지표를 포함합니다. '-I' 옵션은 인터럽트 통계, '-a'는 파일 액세스 통계, '-L'은 전원 관리 통계를 보여줍니다. 이들은 특정 영역의 정보만을 제공하므로, 모든 정보를 확인하고자 할 때는 '-A' 옵션이 가장 적합합니다."
  },
  {
    "id": 549,
    "question": "IPSEC VPN으로 연결된 Server A에서 Server T로 접속이 안되고 있다. VPN설정은 정상이라면 Server A의 어떤 설정이 문제일지 Server A의 라우팅 테이블을 보고 유추하시오.",
    "example": [
      {
        "num": 1,
        "text": "Desstination 설정이 잘못되었다. Destination 0.0.0.0/0의 Gateway를 192.168.100.1로 변경하여야 한다."
      },
      {
        "num": 2,
        "text": "Gateway 설정이 잘못되었다. 192.168.100.0의 Gateway를 192.168.1.1로 변경하여야 한다."
      },
      {
        "num": 3,
        "text": "인터페이스 설정이 잘못되었다. 192.168.100.0/24에 대해서는 eth0으로 설정하여야 한다."
      },
      {
        "num": 4,
        "text": "Genmask가 잘못되었다. 192.168.100.0에 대해 0.0.0.0으로 설정하여야 한다."
      }
    ],
    "answer": 2,
    "explanation": ""
  },
  {
    "id": 550,
    "question": "Windows Server를 이미지로 만든 다음 해당 이미지를 이용해서 서버를 생성하였을 때 다음과 같은 머시지가 줄력되었다.원인과 해결 방법은 무엇인가?",
    "example": [
      {
        "num": 1,
        "text": "파일시스템에 문제가 발생한 것으로 파일시스템 복구를 시도한다."
      },
      {
        "num": 2,
        "text": "SID 값이 중복되어 발생한 것으로Sysprep을 통해 새로운 SID로 변경한다."
      },
      {
        "num": 3,
        "text": "동일한 컴퓨터 이름이 동일네트워크상에 있어서 발생한 것으로 컴퓨터 이름을 변경한다."
      },
      {
        "num": 4,
        "text": "커널 오류로 재설치 하여야 한다."
      }
    ],
    "answer": 2,
    "explanation": "이미지 기반으로 Windows Server를 생성할 때, SID(Security Identifier)가 중복되어 발생하는 문제입니다. Windows는 각 시스템에 고유한 SID 값을 할당하는데, 이미지를 복제해서 서버를 생성할 경우 이 값이 중복될 수 있습니다. 이를 해결하려면 Sysprep 도구를 사용하여 새로운 SID를 생성해 주어야 합니다."
  },
  {
    "id": 551,
    "question": "다음 명령어 중 성격이 다른 3개와 다른 명령어는 무엇인가요?",
    "example": [
      {
        "num": 1,
        "text": "sar"
      },
      {
        "num": 2,
        "text": "ps"
      },
      {
        "num": 3,
        "text": "top"
      },
      {
        "num": 4,
        "text": "tcpdump"
      }
    ],
    "answer": 4,
    "explanation": "이 목록에서 성격이 다른 명령어는 'tcpdump'입니다. 'sar', 'ps', 'top'은 모두 시스템 성능 모니터링과 프로세스 관리를 위한 도구입니다. 'sar'(System Activity Reporter)는 시스템 활동을 보고하고, 'ps'는 현재 실행 중인 프로세스의 스냅샷을 제공하며, 'top'은 실시간으로 시스템 프로세스를 모니터링합니다. 반면, 'tcpdump'는 네트워크 패킷 분석 도구로, 네트워크 트래픽을 캡처하고 분석하는 데 사용됩니다. 따라서 'tcpdump'는 시스템 성능 모니터링보다는 네트워크 트래픽 분석에 초점을 맞춘 도구입니다."
  },
  {
    "id": 552,
    "question": "김초록씨는 회사에서 SSH Tool을 통해 VPC 플랫폼에 생성된 서버에 접속하려고 하나 접속이 잘 되고 있지 않습니다. 김초록씨에게 해줄 수 있는 조언으로 올바르지 않은 것은?",
    "example": [
      {
        "num": 1,
        "text": "ACG에 Rule이 하나도 없네요. 허용정책을 넣어주세요!"
      },
      {
        "num": 2,
        "text": "NACL에 전체대역 거부정책이 우선순위1로 들어가 있네요! 허용정책을 우선순위 2로 넣어주세요!"
      },
      {
        "num": 3,
        "text": "서버에 방화벽이 올라와 있진 않은지 서버접속 콘솔기능을 통해 확인해보세요!"
      },
      {
        "num": 4,
        "text": "서버에 공인 IP가 부착되어 있나요?"
      }
    ],
    "answer": 2,
    "explanation": "올바르지 않은 조언은 'NACL에 전체대역 거부정책이 우선순위1로 들어가 있네요! 허용정책을 우선순위 2로 넣어주세요!'입니다. NACL(Network Access Control List)은 우선순위가 낮은 규칙보다 높은 규칙이 먼저 적용됩니다. 따라서 전체 대역 거부 정책이 우선순위 1로 설정되어 있다면, 우선순위 2의 허용 정책은 적용되지 않습니다. 올바른 접근 방법은 필요한 트래픽에 대한 허용 정책을 더 높은 우선순위(더 낮은 규칙 번호)로 설정하는 것입니다. 다른 조언들은 모두 유효합니다: ACG(Access Control Group)에 SSH 접속을 위한 허용 정책이 필요하고, 서버의 방화벽 설정을 확인해야 하며, SSH 접속을 위해서는 서버에 공인 IP가 필요합니다."
  },
  {
    "id": 553,
    "question": "김초록씨는 Sub Account 상품을 통해 여러 사람들과 같은 인프라 환경을 운영중입니다. 상부에서 사용되지 않는 리소스는 없는지 조사하라는 지시가 내려왔습니다. 가장 적절한 액션으로 올바른 것은?",
    "example": [
      {
        "num": 1,
        "text": "힘을합쳐 여럿이서 모든 상품 댐을 눌러 조사한다."
      },
      {
        "num": 2,
        "text": "Resource 상품을 통해 사용하고 있는 전체 리소스를 확인한다."
      },
      {
        "num": 3,
        "text": "리소스를 몇 개 삭제하고 끝낸다."
      },
      {
        "num": 4,
        "text": "Cloud Advisor 상품을 통해 사용하고 있는 전체 리소스를 확인한다."
      }
    ],
    "answer": 4,
    "explanation": "네이버 클라우드 플랫폼에서 사용되지 않는 리소스를 효과적으로 조사하기 위한 가장 적절한 방법은 'Cloud Advisor 상품을 통해 사용하고 있는 전체 리소스를 확인'하는 것입니다. Cloud Advisor는 클라우드 리소스 최적화를 위한 권장 사항을 제공하는 서비스로, 사용되지 않거나 비효율적으로 사용되는 리소스를 식별하는 데 도움을 줍니다. 이 도구는 자동화된 분석을 통해 비용 절감, 보안 강화, 성능 개선 등의 측면에서 조언을 제공합니다. '모든 상품을 눌러 조사하는 것'은 비효율적이고, 'Resource 상품'은 존재하지 않으며, '리소스를 몇 개 삭제하고 끝내는 것'은 체계적이지 않은 접근 방식입니다."
  },
  {
    "id": 554,
    "question": "네이버 클라우드 플랫폼 리눅스 서버에 부착한 추가 스토리지의 용량이 점점 부족해지고 있습니다. 현재 할당된 용량은 500GB이며, 500GB를 추가로 부착하려 합니다. 다음 중 가장 올바른 액션은 무엇인가요?",
    "example": [
      {
        "num": 1,
        "text": "추가 스토리지를 하나 더 장착하고, 기존 스토리지와 LVM으로 볼륨을 묶습니다."
      },
      {
        "num": 2,
        "text": "서버에 스토리지가 부착된 상태에서 기존 부착된 스토리지 볼륨 용량을 1000GB로 증설합니다."
      },
      {
        "num": 3,
        "text": "서버에 스토리지를 탈착한 상태에서 기존스토리지 볼륨용량을 1000GB로 증설합니다."
      },
      {
        "num": 4,
        "text": "서버 스토리지는 한 번 생성된 이후 증설이 불가능 합니다."
      }
    ],
    "answer": 2,
    "explanation": "네이버 클라우드 플랫폼에서 리눅스 서버에 부착된 추가 스토리지의 용량을 늘리는 가장 올바른 방법은 '서버에 스토리지가 부착된 상태에서 기존 부착된 스토리지 볼륨 용량을 1000GB로 증설'하는 것입니다. 이 방법은 서비스 중단 없이 스토리지 용량을 확장할 수 있는 가장 간단하고 효율적인 방법입니다. 네이버 클라우드 플랫폼은 온라인 상태에서의 볼륨 확장을 지원하므로, 서버를 중지하거나 스토리지를 분리할 필요가 없습니다. LVM으로 볼륨을 묶는 것은 복잡하고 불필요할 수 있으며, 스토리지를 탈착하는 것은 서비스 중단을 초래할 수 있습니다. 마지막으로, 서버 스토리지는 생성 후에도 증설이 가능하므로 네 번째 옵션은 잘못된 정보입니다."
  },
  {
    "id": 555,
    "question": "Live Station 상품을 이용하여 주기적으로 실시간 방송을 운영중입니다. 송출에 문제는 없는지 확인하려 합니다. 이 때 가장 올바른 방법은?",
    "example": [
      {
        "num": 1,
        "text": "매번 실시간으로 모니터링 한다."
      },
      {
        "num": 2,
        "text": "Notification Setting에서 송출실패 에러 알람을 설정하고, 담당자에게 SMS/Email을발송하도록 한다."
      },
      {
        "num": 3,
        "text": "Live Management 상품을 이용하여 모니터링 한다."
      },
      {
        "num": 4,
        "text": "Cloud Search에서 송출실패 에러 알람을 설정하고, 담당자에게 SMS/Email을 발송하도록 한다."
      }
    ],
    "answer": 2,
    "explanation": "실시간 방송 운영 시, 매번 직접 모니터링하는 것은 비효율적입니다. Notification Setting에서 송출 실패와 같은 오류 발생 시 자동으로 알림을 설정하고, 담당자에게 SMS나 Email로 알림을 전송하도록 설정하는 것이 가장 효율적이고 실용적인 방법입니다. 이를 통해 문제가 발생했을 때 빠르게 대응할 수 있습니다."
  },
  {
    "id": 556,
    "question": "nscd에 대한 설명으로 옳은 것은?",
    "example": [
      {
        "num": 1,
        "text": "네임 서비스를 제공하기 위한 서버 데몬"
      },
      {
        "num": 2,
        "text": "네임 서비스를 이용하기 위한 클라이언트"
      },
      {
        "num": 3,
        "text": "네임 서비스를 캐싱하기 위한 데몬"
      },
      {
        "num": 4,
        "text": "네임 서비스를 분석하는 데몬"
      }
    ],
    "answer": 3,
    "explanation": "nscd(Name Service Cache Daemon)에 대한 올바른 설명은 '네임 서비스를 캐싱하기 위한 데몬'입니다. nscd는 리눅스 시스템에서 실행되는 데몬으로, 주요 목적은 네임 서비스 조회 결과를 캐시하는 것입니다. 이는 passwd, group, hosts 등의 데이터베이스에 대한 조회 결과를 메모리에 저장하여, 반복적인 조회 요청에 대해 빠르게 응답할 수 있게 합니다. 이를 통해 시스템 성능을 향상시키고 네트워크 트래픽을 줄일 수 있습니다. nscd는 네임 서비스를 제공하거나 직접 이용하는 것이 아니라, 기존 네임 서비스의 결과를 캐싱하는 중간자 역할을 합니다."
  },
  {
    "id": 557,
    "question": "리눅스와 윈도우 서버간 NAS 스토리지를 공유하기 위한 방법은?",
    "example": [
      {
        "num": 1,
        "text": "NAS AGL 에 윈도우 서버 추가"
      },
      {
        "num": 2,
        "text": "Samba를 설치하여 리눅스서버와 윈도우서버간 NAS가 공유될 수 있도록 설정"
      },
      {
        "num": 3,
        "text": "네이버 클라우드 플랫폼의 리눅스 서버와 윈도우 서버간 NAS 스토리지는 공유 불가능하다."
      },
      {
        "num": 4,
        "text": "NAS 스토리지 생성시, 윈도우 서버와 리눅스 서버간 공유가 가능한 옵선을 선택해준다."
      }
    ],
    "answer": 2,
    "explanation": "리눅스와 윈도우 서버 간 NAS 스토리지를 공유하기 위한 가장 일반적이고 효과적인 방법은 'Samba를 설치하여 리눅스 서버와 윈도우 서버 간 NAS가 공유될 수 있도록 설정'하는 것입니다. Samba는 SMB/CIFS 프로토콜을 구현한 오픈 소스 소프트웨어로, 리눅스와 윈도우 시스템 간의 파일 및 프린터 공유를 가능하게 합니다. Samba를 사용하면 리눅스 시스템에 있는 NAS 스토리지를 윈도우 시스템에서 네트워크 드라이브로 인식하고 접근할 수 있게 됩니다. 'NAS AGL'은 일반적인 용어가 아니며, 네이버 클라우드 플랫폼에서 리눅스와 윈도우 서버 간 NAS 스토리지 공유는 가능합니다. 또한, NAS 스토리지 생성 시 특별한 '공유 옵션'을 선택하는 것이 아니라, 설정을 통해 공유를 구현합니다."
  },
  {
    "id": 558,
    "question": "네이버 클라우드 플랫폼 Classic 환경에 존재하는 서버의 10.x.x.x 사설 IP 대역 NIC에 두개 이상의 IP를 부여하였을 때 발생할 수 있는 상황은?",
    "example": [
      {
        "num": 1,
        "text": "기존 IP로는 통신이 되나 추가된 IP로 통신이 되지 않는다."
      },
      {
        "num": 2,
        "text": "추가된 IP 뿐만 아니라 기존 IP도 통신이 되지 않는다."
      },
      {
        "num": 3,
        "text": "서버가 강제 정지된다."
      },
      {
        "num": 4,
        "text": "기존 IP는 통신이 안되고 추가된 IP로만 통신이 된다."
      }
    ],
    "answer": 2,
    "explanation": "네이버 클라우드 플랫폼의 Classic 환경에서 서버의 10.x.x.x 사설 IP 대역 NIC에 두 개 이상의 IP를 부여했을 때 발생할 수 있는 상황은 '추가된 IP 뿐만 아니라 기존 IP도 통신이 되지 않는다'입니다. 이는 Classic 환경의 네트워크 구성 특성 때문입니다. Classic 환경에서는 하나의 NIC에 여러 개의 IP를 할당하는 것이 네트워크 구성에 혼란을 줄 수 있으며, 이로 인해 모든 IP 주소로의 통신이 불가능해질 수 있습니다. 이는 라우팅 테이블 충돌이나 네트워크 인터페이스 구성의 문제로 인한 것일 수 있습니다. 따라서 Classic 환경에서는 단일 IP 사용을 권장하며, 여러 IP가 필요한 경우 VPC 환경을 사용하는 것이 좋습니다."
  },
  {
    "id": 559,
    "question": "김초록씨는 네이버 클라우드 플랫폼 VPC 플랫폼에서 두 개의 VPC를 생성하여 사용중입니다. 이 때 두 개의 VPC 간 통신을 가능케 하기 위해선 어떤 상품을 이용해야 하나요? (복수정답)",
    "example": [
      {
        "num": 1,
        "text": "VPC Peering"
      },
      {
        "num": 2,
        "text": "NAT Gateway"
      },
      {
        "num": 3,
        "text": "Route Table"
      },
      {
        "num": 4,
        "text": "Virtual Private Gateway"
      }
    ],
    "answer": [1, 3],
    "explanation": "네이버 클라우드 플랫폼의 VPC 환경에서 두 개의 VPC 간 통신을 가능하게 하기 위해서는 'VPC Peering'과 'Route Table'을 사용해야 합니다. VPC Peering은 두 VPC 간에 직접적인 네트워크 연결을 생성하여 private IP를 사용해 통신할 수 있게 해줍니다. 이를 통해 VPC 간에 안전하고 효율적인 통신이 가능해집니다. Route Table은 VPC 내의 트래픽이 어디로 향해야 하는지를 지정하는 데 사용됩니다. VPC Peering을 설정한 후, 각 VPC의 Route Table에 피어링된 VPC로 가는 경로를 추가해야 실제로 통신이 가능해집니다. NAT Gateway는 private 서브넷의 인스턴스가 인터넷에 접근할 수 있게 해주는 서비스이며, Virtual Private Gateway는 일반적으로 온프레미스 네트워크와 VPC를 연결하는 데 사용되므로, 이 상황에는 적합하지 않습니다."
  },
  {
    "id": 560,
    "question": "동일한 VPC내의 각기 다른 ACG와 NIC가 매핑되어 있는 서버 두 대가 동작하고 있습니다. 두 서버 간 ping이 가능하게 하기 위해 해야하는 작업은?",
    "example": [
      {
        "num": 1,
        "text": "각 ACG에 ICMP 프로토콜 허용 rule 추가"
      },
      {
        "num": 2,
        "text": "각 ACG 에 TCP 프로토콜 허용 rule 추가"
      },
      {
        "num": 3,
        "text": "각 ACG에 UDP 프로토콜 허용 rule 추가"
      },
      {
        "num": 4,
        "text": "각 ACG에 IGMP 프로토콜 허용 rule 추가"
      }
    ],
    "answer": 1,
    "explanation": "동일한 VPC 내의 서버 간 ping이 가능하게 하기 위해서는 각 서버의 ACG(Access Control Group)에 ICMP 프로토콜 허용 규칙을 추가해야 합니다. Ping은 ICMP(Internet Control Message Protocol)를 사용하기 때문입니다. ACG는 인스턴스 레벨의 방화벽 역할을 하며, 인바운드와 아웃바운드 트래픽을 제어합니다. ICMP 허용 규칙을 추가함으로써 ping 요청과 응답이 서버 간에 오갈 수 있게 됩니다. TCP와 UDP는 다른 종류의 통신에 사용되는 프로토콜이며, IGMP는 멀티캐스트 그룹 관리에 사용되는 프로토콜로 ping과는 관련이 없습니다."
  },
  {
    "id": 561,
    "question": "VPC 플랫폼 환경에 있는 서버 장애알람을 받기 위한 세팅이 필요합니다. 이 때 사용해야하는 상품으로 가장 적절한 것은?",
    "example": [
      {
        "num": 1,
        "text": "Cloud Insight"
      },
      {
        "num": 2,
        "text": "Cloud Search"
      },
      {
        "num": 3,
        "text": "Cloud Detector"
      },
      {
        "num": 4,
        "text": "Cloud Checker"
      }
    ],
    "answer": 1,
    "explanation": "VPC 플랫폼 환경에서 서버 장애 알람을 설정하기 위해 사용해야 하는 가장 적절한 상품은 'Cloud Insight'입니다. Cloud Insight는 네이버 클라우드 플랫폼의 통합 모니터링 서비스로, 다양한 클라우드 리소스의 상태와 성능을 모니터링하고 알림을 설정할 수 있습니다. 서버의 CPU 사용률, 메모리 사용량, 디스크 I/O, 네트워크 트래픽 등 다양한 지표를 모니터링하고, 설정한 임계값을 초과할 경우 알람을 발생시킬 수 있습니다. 'Cloud Search'는 검색 서비스, 'Cloud Detector'와 'Cloud Checker'는 실제 네이버 클라우드 플랫폼의 상품명이 아닙니다."
  },
  {
    "id": 562,
    "question": "SSL VPN에 접속하여 Management Console을 이용하여 서버를 새로 생성하고 생성된 서버는 기존에 SSL VPN 접속이 가능한 ACG에 속하도록 하여 생성했는데 새로 생성한 서버만 접근이 되지 않는다. 원인과 해결 방법은 무엇인가?",
    "example": [
      {
        "num": 1,
        "text": "SSL VPN 캐시 문제로 SSL VPN을 재접속한다."
      },
      {
        "num": 2,
        "text": "웹브라우저 캐시 문제로 웹 브라우저를 재시작한다"
      },
      {
        "num": 3,
        "text": "SSL VPN 라우팅 문제로 SSL VPN을 재접속 한다."
      },
      {
        "num": 4,
        "text": "ACG에서 SSL VPN 대역이 포함되어 있지 않아서 발생한 문제로 ACG에 SSL VPN대역을 추가한다."
      }
    ],
    "answer": 4,
    "explanation": "새로 생성한 서버에만 접근이 되지 않는 문제의 가장 가능성 높은 원인은 ACG(Access Control Group)에 SSL VPN 대역이 포함되어 있지 않기 때문입니다. ACG는 인스턴스 단위로 적용되는 가상 방화벽으로, 인바운드와 아웃바운드 트래픽을 제어합니다. 새로 생성된 서버가 기존 ACG에 속하더라도, 해당 ACG에 SSL VPN 대역에 대한 접근 허용 규칙이 없다면 SSL VPN을 통한 접근이 불가능합니다. 해결 방법은 해당 ACG에 SSL VPN 대역을 추가하여 접근을 허용하는 것입니다. 이렇게 하면 SSL VPN을 통해 새로 생성된 서버에 접근할 수 있게 됩니다. SSL VPN 캐시, 웹브라우저 캐시, SSL VPN 라우팅 문제는 이 상황과 직접적인 관련이 없습니다."
  },
  {
    "id": 563,
    "question": "윈도우 서버의 Process Crash, Memory Leak패턴을 확인하는 디버그 도구는 무엇인가?",
    "example": [
      {
        "num": 1,
        "text": "Debug Diag"
      },
      {
        "num": 2,
        "text": "PAL(Performance Analysis of Logs Tool)"
      },
      {
        "num": 3,
        "text": "xPref"
      },
      {
        "num": 4,
        "text": "Message Analyzer"
      }
    ],
    "answer": 1,
    "explanation": "윈도우 서버의 Process Crash와 Memory Leak 패턴을 확인하는 주요 디버그 도구는 'Debug Diag'(Debug Diagnostics Tool)입니다. Debug Diag는 Microsoft에서 제공하는 무료 트러블슈팅 도구로, 응용 프로그램 충돌, 느린 성능, 메모리 및 핸들 누수 등의 문제를 진단하는 데 사용됩니다. 이 도구는 크래시 덤프를 분석하고, 메모리 사용량을 모니터링하며, 다양한 성능 문제를 진단할 수 있습니다. PAL(Performance Analysis of Logs Tool)은 성능 로그를 분석하는 도구이지만, 프로세스 크래시나 메모리 누수를 직접적으로 진단하지는 않습니다. xPerf(질문에서는 xPref로 오타가 있음)는 Windows Performance Toolkit의 일부로 성능 추적에 사용되며, Message Analyzer는 네트워크 트래픽 분석 도구입니다."
  },
  {
    "id": 564,
    "question": "다음 프로그램 중 성격이 다른 프로그램은?",
    "example": [
      {
        "num": 1,
        "text": "tcpdump"
      },
      {
        "num": 2,
        "text": "network monitor"
      },
      {
        "num": 3,
        "text": "nmap"
      },
      {
        "num": 4,
        "text": "wireshark"
      }
    ],
    "answer": 3,
    "explanation": "이 목록에서 성격이 다른 프로그램은 'nmap'입니다. nmap(Network Mapper)은 네트워크 탐색, 보안 감사, 네트워크 인벤토리 작성 등에 사용되는 오픈 소스 도구입니다. 주로 포트 스캔, OS 탐지, 서비스/버전 탐지 등의 기능을 제공합니다. 반면, 다른 프로그램들은 모두 네트워크 트래픽을 캡처하고 분석하는 데 사용됩니다. 'tcpdump'는 명령줄 패킷 분석기이고, 'network monitor'는 Microsoft의 네트워크 트래픽 캡처 및 분석 도구이며, 'Wireshark'는 그래픽 사용자 인터페이스를 제공하는 강력한 네트워크 프로토콜 분석기입니다. 따라서 nmap은 네트워크 스캐닝 도구로, 다른 세 가지 네트워크 트래픽 분석 도구와는 성격이 다릅니다."
  },
  {
    "id": 565,
    "question": "로그에 대하여 정해진 처리방식으로 삭제하거나 파일을 바꿔줌으로써, 시스템 성능을 높이는 역할을 수행하는 것은?",
    "example": [
      {
        "num": 1,
        "text": "logtemp"
      },
      {
        "num": 2,
        "text": "logarchive"
      },
      {
        "num": 3,
        "text": "logrefresh"
      },
      {
        "num": 4,
        "text": "logrotate"
      }
    ],
    "answer": 4,
    "explanation": "로그 파일을 관리하고 시스템 성능을 향상시키는 역할을 수행하는 도구는 'logrotate'입니다. logrotate는 리눅스 시스템에서 로그 파일을 주기적으로 순환(rotate), 압축, 삭제하는 등의 작업을 자동화하는 유틸리티입니다. 이 도구는 로그 파일이 지나치게 커지는 것을 방지하고, 오래된 로그를 체계적으로 관리함으로써 디스크 공간을 효율적으로 사용하고 시스템 성능을 유지하는 데 도움을 줍니다. 'logtemp', 'logarchive', 'logrefresh'는 실제 존재하는 표준 리눅스 유틸리티가 아닙니다."
  },
  {
    "id": 566,
    "question": "리눅스 OS에서 일반적인 시스템 로그는 어느 경로에 저장되는가?",
    "example": [
      {
        "num": 1,
        "text": "/log"
      },
      {
        "num": 2,
        "text": "/var/log"
      },
      {
        "num": 3,
        "text": "/sys/ log"
      },
      {
        "num": 4,
        "text": "/var/log/httpd"
      }
    ],
    "answer": 2,
    "explanation": "리눅스 OS에서 일반적인 시스템 로그는 '/var/log' 디렉토리에 저장됩니다. 이 디렉토리는 시스템 및 애플리케이션의 다양한 로그 파일을 저장하는 표준 위치입니다. 여기에는 시스템 부팅 메시지, 커널 로그, 인증 로그, 애플리케이션 로그 등이 포함됩니다. 예를 들어, '/var/log/syslog' 또는 '/var/log/messages'는 일반적인 시스템 메시지를 저장하는 파일입니다. '/log'는 표준 로그 디렉토리가 아니며, '/sys/log'는 존재하지 않는 경로입니다. '/var/log/httpd'는 Apache 웹 서버의 로그를 저장하는 특정 디렉토리로, 일반적인 시스템 로그의 위치는 아닙니다."
  },
  {
    "id": 567,
    "question": "다음 중 NMAP에 대한 설명 중 잘못된 것은?",
    "example": [
      {
        "num": 1,
        "text": "포트 스캔용 툴이다."
      },
      {
        "num": 2,
        "text": "오픈되어 있는 포트에 대해 스캔을 수행한다."
      },
      {
        "num": 3,
        "text": "방화벽으로 보호되는 호스트에 대해서는 스캔이 불가능하다."
      },
      {
        "num": 4,
        "text": "리눅스 버전과 윈도우 버전이 제공된다."
      }
    ],
    "answer": 3,
    "explanation": "NMAP(Network Mapper)에 대한 설명 중 잘못된 것은 '방화벽으로 보호되는 호스트에 대해서는 스캔이 불가능하다'입니다. 실제로 NMAP은 방화벽으로 보호되는 호스트도 스캔할 수 있습니다. NMAP은 다양한 스캔 기법을 제공하며, 이 중 일부는 방화벽을 우회하거나 방화벽의 존재를 탐지하는 데 사용될 수 있습니다. 예를 들어, TCP SYN 스캔, TCP ACK 스캔, 스텔스 스캔 등의 기법을 사용하여 방화벽 뒤의 호스트를 스캔할 수 있습니다. 다른 설명들은 모두 정확합니다. NMAP은 포트 스캔 도구이며, 열린 포트를 탐지하고, 리눅스와 윈도우 버전 모두 제공됩니다."
  },
  {
    "id": 568,
    "question": "Classic 플랫폼을 사용중입니다. SSL VPN 상품을 신청 후, 네이버 클라우드 플랫폼 서버에 접속을 시도 시 접속이 되지 않습니다. 어떤 부분을 확인해야 하나요?",
    "example": [
      {
        "num": 1,
        "text": "NACL"
      },
      {
        "num": 2,
        "text": "ACG"
      },
      {
        "num": 3,
        "text": "Subnet"
      },
      {
        "num": 4,
        "text": "Public IP"
      }
    ],
    "answer": 2,
    "explanation": "Classic 플랫폼에서 SSL VPN을 통해 서버에 접속이 되지 않는 경우, 가장 먼저 확인해야 할 것은 ACG(Access Control Group)입니다. ACG는 Classic 환경에서 인스턴스 단위로 적용되는 가상 방화벽 역할을 합니다. SSL VPN을 통해 서버에 접속하려면, 해당 서버의 ACG에 SSL VPN 접속을 허용하는 규칙이 포함되어 있어야 합니다. 구체적으로, SSL VPN IP 대역에서의 인바운드 트래픽을 허용하는 규칙이 필요합니다. NACL(Network Access Control List)은 VPC 환경에서 사용되는 보안 그룹이므로 Classic 환경과는 관련이 없습니다. Subnet 설정은 VPC 환경에서 중요하지만 Classic 환경에서는 해당되지 않습니다. Public IP는 서버에 할당되어 있어야 하지만, SSL VPN 접속 문제의 주된 원인은 아닙니다."
  },
  {
    "id": 569,
    "question": "김초록씨는 네이버 클라우드 플랫폼에서 여러 대의 SSD 서버를 운영중입니다, 상부에서 서버 운영 비용을 절감할 수 있는 대안을 제시하라는 지시가 내려왔습니다. 이 때 성능이 저하되어서는 안됩니다. 가장 올바른 방법은 무엇인가요?",
    "example": [
      {
        "num": 1,
        "text": "사용하고 있는 스토리지 종류는 HDD로 변경한다"
      },
      {
        "num": 2,
        "text": "Auto Scaling을 통해 트래픽에 따라 서버가 자동으로 증감하도록 구조를 변경한다."
      },
      {
        "num": 3,
        "text": "운영중인 서버 스펙을 한 단계 낮준다"
      },
      {
        "num": 4,
        "text": "서버를 몇 대 지워 눈속임 한다."
      }
    ],
    "answer": 2,
    "explanation": "서버 운영 비용을 절감하면서도 성능을 유지하기 위한 가장 효과적인 방법은 'Auto Scaling을 통해 트래픽에 따라 서버가 자동으로 증감하도록 구조를 변경'하는 것입니다. Auto Scaling은 트래픽 부하에 따라 서버 인스턴스의 수를 자동으로 조절하는 기능입니다. 이를 통해 트래픽이 적을 때는 서버 수를 줄여 비용을 절감하고, 트래픽이 많을 때는 서버 수를 늘려 성능을 유지할 수 있습니다. 스토리지를 HDD로 변경하는 것은 성능 저하를 초래할 수 있고, 서버 스펙을 낮추는 것도 성능에 영향을 줄 수 있습니다. 서버를 임의로 삭제하는 것은 서비스 품질에 직접적인 영향을 줄 수 있는 위험한 방법입니다. Auto Scaling은 비용 효율성과 성능을 모두 고려한 최적의 솔루션입니다."
  },
  {
    "id": 570,
    "question": "Cloud DB for MySQL 운영 중에 문제가 발생하여 에러 로그를 확인해보고자 한다. Cloud DB for MySQL의 로그를 확인해 볼 수 있는 방법을 모두 고르시오.",
    "example": [
      {
        "num": 1,
        "text": "CLA에서 Cdb_mysql_error 로그 확인"
      },
      {
        "num": 2,
        "text": "Cloud DB for MySQL > Monitoring > DB Log에서 확인"
      },
      {
        "num": 3,
        "text": "Cloud Insight 서비스에서 error log 확인"
      },
      {
        "num": 4,
        "text": "Cloud Resource Manager에서 error log 확인"
      }
    ],
    "answer": [1, 2],
    "explanation": "Cloud DB for MySQL의 에러 로그를 확인할 수 있는 방법은 'CLA에서 Cdb_mysql_error 로그 확인'과 'Cloud DB for MySQL > Monitoring > DB Log에서 확인'입니다. CLA(Cloud Log Analytics)는 네이버 클라우드 플랫폼의 로그 분석 서비스로, 여기서 Cdb_mysql_error 로그를 확인할 수 있습니다. 또한, Cloud DB for MySQL 서비스의 관리 콘솔에서 직접 DB Log를 확인할 수 있습니다. Cloud Insight는 성능 모니터링 서비스이지만 상세한 에러 로그를 제공하지는 않습니다. Cloud Resource Manager는 리소스 관리 서비스로, 데이터베이스 에러 로그와는 관련이 없습니다."
  },
  {
    "id": 571,
    "question": "VPC 플랫폼을 사용중입니다. 사내 네트워크에서 네이버 클라우드 플랫폼 인프라에 구축한 서버로 ping이 가지 않습니다. 이 때 정책적으로 살펴보아야 하는 요소에는 어떤 것들이 있습니까? (복수 정답)",
    "example": [
      {
        "num": 1,
        "text": "Server Image"
      },
      {
        "num": 2,
        "text": "Storage"
      },
      {
        "num": 3,
        "text": "ACG"
      },
      {
        "num": 4,
        "text": "NACL"
      }
    ],
    "answer": [3, 4],
    "explanation": "VPC 플랫폼에서 사내 네트워크에서 클라우드 서버로 ping이 가지 않을 때 정책적으로 살펴보아야 할 요소는 ACG(Access Control Group)와 NACL(Network Access Control List)입니다. ACG는 인스턴스 수준의 방화벽 역할을 하며, 인바운드와 아웃바운드 트래픽을 제어합니다. NACL은 서브넷 수준의 방화벽으로, 서브넷으로 들어오고 나가는 트래픽을 제어합니다. ping(ICMP) 트래픽이 허용되려면 두 곳 모두에서 해당 트래픽을 허용해야 합니다. Server Image는 서버의 기본 설정과 관련이 있지만 네트워크 정책과는 직접적인 관련이 없습니다. Storage 역시 네트워크 연결성과는 직접적인 관련이 없습니다."
  },
  {
    "id": 572,
    "question": "김초록씨는 네이버 클라우드 플랫폼 NAS상품을 이용중입니다. 데이터 유지를 위해 자동으로 매일 오후 2시에 Snapshot을 찍고 있습니다. 현재 시각은 오후 8시입니다. 다음 중 복구 가능한 일자는? (복수정답)",
    "example": [
      {
        "num": 1,
        "text": "당일 snapshot 내역"
      },
      {
        "num": 2,
        "text": "3일전 snapshot 내역"
      },
      {
        "num": 3,
        "text": "7일전 snapshot 내역"
      },
      {
        "num": 4,
        "text": "10일전 snapshot 내역"
      }
    ],
    "answer": [1, 2, 3, 4],
    "explanation": "네이버 클라우드 플랫폼의 NAS 상품에서 Snapshot 기능을 사용할 때, 일반적으로 모든 Snapshot은 최대 30일까지 보관됩니다. 따라서 당일부터 10일 전까지의 모든 Snapshot은 복구 가능합니다. 구체적으로:\n1. 당일 snapshot: 오후 2시에 생성되었으므로 사용 가능합니다.\n2. 3일전 snapshot: 30일 이내이므로 사용 가능합니다.\n3. 7일전 snapshot: 30일 이내이므로 사용 가능합니다.\n4. 10일전 snapshot: 30일 이내이므로 사용 가능합니다.\n이 정책은 데이터의 장기 보관과 빠른 복구를 가능하게 하며, 사용자가 필요에 따라 다양한 시점의 데이터로 복구할 수 있게 합니다. 단, 실제 보관 기간은 사용자의 설정에 따라 다를 수 있으므로, 정확한 정보는 네이버 클라우드 플랫폼의 공식 문서나 관리 콘솔을 통해 확인해야 합니다."
  },
  {
    "id": 573,
    "question": "리눅스 서버를 사용하던 중 사용중인 파일 리스트를 확인하고 싶어졌습니다. lsof 명령어를 통해 확인하고자 하는데, 옵션값에 대한 설명을 보고싶을 경우 사용할 수 있는 명령어는?",
    "example": [
      {
        "num": 1,
        "text": "lsof -P"
      },
      {
        "num": 2,
        "text": "lsof -n"
      },
      {
        "num": 3,
        "text": "lsof -w"
      },
      {
        "num": 4,
        "text": "lsof -h"
      }
    ],
    "answer": 4,
    "explanation": "lsof 명령어의 옵션값에 대한 설명을 보고 싶을 경우 사용할 수 있는 명령어는 'lsof -h'입니다. 여기서 '-h' 옵션은 'help'의 약자로, 명령어의 사용법과 옵션에 대한 간단한 설명을 제공합니다. 다른 옵션들의 의미는 다음과 같습니다:\n- '-P': 포트 번호를 서비스 이름으로 변환하지 않고 숫자로 표시\n- '-n': 호스트 이름을 IP 주소로 표시\n- '-w': 경고 메시지 출력 억제\n이러한 옵션들은 lsof 명령어의 출력을 조정하는 데 사용되지만, 옵션에 대한 설명을 제공하지는 않습니다. 따라서 옵션에 대한 설명을 보려면 '-h' 옵션을 사용해야 합니다."
  },
  {
    "id": 574,
    "question": "Classic 플랫폼에서 서버 상품을 이용중 입니다. 서버에 IP를 하나 더 부여해야 하는 상황이 되었습니다. 이 때 올바른 사용방법은 무엇인가요?",
    "example": [
      {
        "num": 1,
        "text": "Private Subnet을 생성한 후 Network Interface를 부착한다."
      },
      {
        "num": 2,
        "text": "Network Interface를 단독 생성하여 부착한다."
      },
      {
        "num": 3,
        "text": "기존 사용하던 Network Interface에 Secondary IP를 추가한다."
      },
      {
        "num": 4,
        "text": "서버IP를 추가 부여하는 것이 불가능하다."
      }
    ],
    "answer": 3,
    "explanation": "네이버 클라우드 플랫폼의 Classic 환경에서 서버에 IP를 추가로 부여하는 올바른 방법은 '기존 사용하던 Network Interface에 Secondary IP를 추가'하는 것입니다. Classic 환경에서는 하나의 네트워크 인터페이스에 여러 개의 IP 주소를 할당할 수 있습니다. 이를 Secondary IP라고 합니다. 이 방법을 사용하면 서버를 재시작하지 않고도 추가 IP를 할당할 수 있습니다. Private Subnet 생성은 VPC 환경에서 사용되는 개념이며, Classic 환경에는 적용되지 않습니다. Network Interface를 단독으로 생성하여 부착하는 것도 Classic 환경에서는 일반적이지 않습니다. 서버 IP를 추가 부여하는 것은 가능하므로, 네 번째 옵션도 올바르지 않습니다."
  },
  {
    "id": 575,
    "question": "김초록씨는 Cloud DB for MySQL 상품을 이용중입니다. 상부에서 고가용성 테스트를 지시하였습니다. 이 때 김초록씨가 해야하는 액션으로 가장 적절한 것은 무엇인가요?",
    "example": [
      {
        "num": 1,
        "text": "Master 서버에 고의 장애를 발생시킨다."
      },
      {
        "num": 2,
        "text": "Slave 서버에 고의 장애를 발생시킨다."
      },
      {
        "num": 3,
        "text": "할 수 있는 방법이 없다."
      },
      {
        "num": 4,
        "text": "DB 관리에서 Master DB Fail Over 기능을 작동시킨다."
      }
    ],
    "answer": 4,
    "explanation": "Cloud DB for MySQL의 고가용성을 테스트하는 가장 적절한 방법은 'DB 관리에서 Master DB Fail Over 기능을 작동시키는 것'입니다. Fail Over는 주 시스템(Master)에 문제가 발생했을 때 대기 시스템(Slave)이 그 역할을 자동으로 이어받는 기능입니다. 이 기능을 수동으로 작동시켜 테스트함으로써, 실제 장애 상황에서 시스템이 어떻게 대응하는지 안전하게 확인할 수 있습니다. Master나 Slave 서버에 고의로 장애를 발생시키는 것은 위험할 수 있으며, 실제 서비스에 영향을 줄 수 있습니다. '할 수 있는 방법이 없다'는 것은 잘못된 진술입니다. 네이버 클라우드 플랫폼은 이러한 고가용성 테스트를 위한 기능을 제공하고 있습니다."
  },
  {
    "id": 576,
    "question": "OS영역의 스토리지를 스냅샷을 통해 새로운 스토리지로 생성하여 스토리지에 할당했을 경우 발생할 수 있는 현상은? (리눅스 서버일 경우)",
    "example": [
      {
        "num": 1,
        "text": "아무 문제 없다"
      },
      {
        "num": 2,
        "text": "OS영역의 스토리지에 대해서는 스냅샷 생성이 불가능하다"
      },
      {
        "num": 3,
        "text": "Linux(CentOS, Ubuntu) 서버가 추가스토리지를 부팅용 스토리지로 오인하는 현상이 발생한다"
      },
      {
        "num": 4,
        "text": "OS영역의 스토리지에 대한 스냅샷 생성은 가능하다, 해당 스냅샷을 기반으로 한 스토리지 생성이 불가능 하다."
      }
    ],
    "answer": 3,
    "explanation": "OS 영역의 스토리지를 스냅샷을 통해 새로운 스토리지로 생성하여 할당했을 때, Linux 서버에서 발생할 수 있는 현상은 '서버가 추가 스토리지를 부팅용 스토리지로 오인하는 것'입니다. 이는 스냅샷으로 생성된 새 스토리지가 원본 OS 스토리지와 동일한 UUID(Universally Unique Identifier)를 가지기 때문입니다. Linux 시스템은 부팅 시 UUID를 기반으로 부팅 볼륨을 식별하므로, 동일한 UUID를 가진 다른 스토리지가 존재하면 혼란이 발생할 수 있습니다. 이 문제를 해결하기 위해서는 새로 생성된 스토리지의 UUID를 변경해야 합니다. OS 영역의 스토리지에 대한 스냅샷 생성과 이를 기반으로 한 새 스토리지 생성은 모두 가능합니다. 따라서 1, 2, 4번 옵션은 올바르지 않습니다."
  },
  {
    "id": 577,
    "question": "윈도우 서버에서 로그인한 내역을 확인하기 위한 위치로 올바른 것은?",
    "example": [
      {
        "num": 1,
        "text": "이벤트 뷰어 > Windows 로그 > 보안"
      },
      {
        "num": 2,
        "text": "이벤트 뷰어 > Windows로그 > 시스템"
      },
      {
        "num": 3,
        "text": "이벤트 뷰어 > Windows로그 > Setup"
      },
      {
        "num": 4,
        "text": "이벤트 뷰어 > Windows로그 > Forwarded Event"
      }
    ],
    "answer": 1,
    "explanation": "윈도우 서버에서 로그인 내역을 확인하기 위한 올바른 위치는 '이벤트 뷰어 > Windows 로그 > 보안'입니다. 이 로그 카테고리에는 사용자 로그인 및 로그아웃, 계정 잠금, 권한 변경 등 보안 관련 이벤트가 기록됩니다. 로그인 이벤트는 주로 이벤트 ID 4624(성공적인 로그인)와 4625(로그인 실패)로 기록됩니다. '시스템' 로그는 주로 시스템 구성요소와 드라이버 관련 이벤트를 기록합니다. 'Setup' 로그는 주로 윈도우 설치 및 업그레이드 관련 이벤트를 기록합니다. 'Forwarded Event' 로그는 다른 컴퓨터에서 전달받은 이벤트를 저장하는데 사용되며, 일반적으로 로컬 로그인 내역을 확인하는 데는 사용되지 않습니다."
  },
  {
    "id": 578,
    "question": "CentOS 6.x 이상에서는 스토리지 식별을 무엇으로 하나요?",
    "example": [
      {
        "num": 1,
        "text": "라벨"
      },
      {
        "num": 2,
        "text": "UUID"
      },
      {
        "num": 3,
        "text": "파티션 번호"
      },
      {
        "num": 4,
        "text": "드라이브명"
      }
    ],
    "answer": 2,
    "explanation": "CentOS 6.x 이상 버전에서는 스토리지 식별을 주로 UUID(Universally Unique Identifier)로 합니다. UUID는 각 파티션이나 파일시스템에 할당된 고유한 식별자입니다. 이 방식은 이전의 장치 이름(예: /dev/sda1)을 사용하는 방식보다 더 안정적입니다. 장치 이름은 하드웨어 구성이 변경되면 바뀔 수 있지만, UUID는 변경되지 않기 때문입니다. 이를 통해 시스템은 하드웨어 변경에도 불구하고 올바른 파티션을 식별할 수 있습니다. UUID는 /etc/fstab 파일에서 사용되어 부팅 시 파일시스템을 마운트하는 데 사용됩니다. 라벨도 사용될 수 있지만, UUID만큼 보편적이지 않습니다. 파티션 번호나 드라이브명은 변경될 수 있어 안정적인 식별 방법이 아닙니다."
  },
  {
    "id": 579,
    "question": "윈도우 서버에서 syslog 역할을 수행하는 것은?",
    "example": [
      {
        "num": 1,
        "text": "sar"
      },
      {
        "num": 2,
        "text": "netmon"
      },
      {
        "num": 3,
        "text": "event viewer"
      },
      {
        "num": 4,
        "text": "성능 모니터"
      }
    ],
    "answer": 3,
    "explanation": "윈도우 서버에서 syslog와 유사한 역할을 수행하는 것은 'event viewer(이벤트 뷰어)'입니다. 이벤트 뷰어는 윈도우 운영 체제의 로깅 시스템으로, 시스템, 보안, 애플리케이션 등 다양한 이벤트를 기록하고 관리합니다. 리눅스의 syslog와 마찬가지로, 이벤트 뷰어는 시스템 및 애플리케이션의 중요한 활동을 추적하고 문제 해결에 도움을 줍니다. 'sar'는 리눅스 시스템의 성능 모니터링 도구이며, 'netmon'은 네트워크 모니터링 도구입니다. '성능 모니터'는 윈도우의 시스템 성능을 실시간으로 모니터링하는 도구로, 로깅 기능보다는 실시간 성능 측정에 초점을 맞춥니다."
  },
  {
    "id": 580,
    "question": "Linux 서버에서 시스템 부팅 메시지를 저장하는 로그파일은 무엇인가요?",
    "example": [
      {
        "num": 1,
        "text": "/var/log/dmesg"
      },
      {
        "num": 2,
        "text": "/var/log/wtmp"
      },
      {
        "num": 3,
        "text": "/var/log/access"
      },
      {
        "num": 4,
        "text": "/var/log/secure"
      }
    ],
    "answer": 1,
    "explanation": "Linux 서버에서 시스템 부팅 메시지를 저장하는 로그 파일은 '/var/log/dmesg'입니다. 'dmesg'는 'diagnostic message'의 약자로, 커널 링 버퍼의 메시지를 포함합니다. 이 파일은 시스템 부팅 과정에서 발생하는 하드웨어 감지, 드라이버 초기화, 커널 메시지 등의 중요한 정보를 저장합니다. '/var/log/wtmp'는 사용자의 로그인/로그아웃 기록을 저장합니다. '/var/log/access'는 일반적으로 웹 서버의 접근 로그를 저장하는 데 사용되며, '/var/log/secure'는 인증 관련 로그를 저장합니다. 부팅 메시지를 실시간으로 확인하려면 터미널에서 'dmesg' 명령어를 사용할 수 있습니다."
  },
  {
    "id": 581,
    "question": "Linux 서버의 SSH에서 root로의 접근을 막고자 할 때 변경해야 하는 설정내용은 무엇인가요?",
    "example": [
      {
        "num": 1,
        "text": "UsePAM"
      },
      {
        "num": 2,
        "text": "PermitRootLogin"
      },
      {
        "num": 3,
        "text": "ChrootDirectory"
      },
      {
        "num": 4,
        "text": "PermitTunnel"
      }
    ],
    "answer": 2,
    "explanation": "Linux 서버의 SSH에서 root로의 직접 접근을 막고자 할 때 변경해야 하는 설정은 'PermitRootLogin'입니다. 이 설정은 SSH 서버 설정 파일(/etc/ssh/sshd_config)에서 찾을 수 있습니다. root 로그인을 막으려면 'PermitRootLogin no'로 설정해야 합니다. 이렇게 하면 root 계정으로의 직접적인 SSH 접속이 불가능해지며, 대신 일반 사용자 계정으로 로그인한 후 필요시 su나 sudo를 사용하여 root 권한을 얻는 방식을 사용해야 합니다. 이는 보안을 강화하는 중요한 방법 중 하나입니다. 'UsePAM'은 PAM(Pluggable Authentication Modules) 사용 여부를 설정합니다. 'ChrootDirectory'는 사용자를 특정 디렉토리에 가두는 설정이며, 'PermitTunnel'은 SSH 터널링 허용 여부를 설정합니다."
  },
  {
    "id": 582,
    "question": "다음 중, Cloud DB for MS-SQL의 백업에 대한 설명 중 옳은 것은?",
    "example": [
      {
        "num": 1,
        "text": "DB백업파일 보관기간은 최소 1일에서 최대 20일까지 선택할 수 있습니다"
      },
      {
        "num": 2,
        "text": "DB 백업파일은 별도의 스토리지에 보관되며, 보관 비용은 Cloud DB for MS-SQL 사용 요금에 포함되어 있습니다."
      },
      {
        "num": 3,
        "text": "백업 시간은 사용자 정의 선택시 15분 단위로 선택이 가능합니다."
      },
      {
        "num": 4,
        "text": "백업 시간으로 자동을 선택하게 되면, 매번 임의의 시간에 백업이 진행됩니다."
      }
    ],
    "answer": 2,
    "explanation": "네이버 클라우드 플랫폼의 Cloud DB for MS-SQL 백업에 대한 올바른 설명은 'DB 백업파일은 별도의 스토리지에 보관되며, 보관 비용은 Cloud DB for MS-SQL 사용 요금에 포함되어 있습니다.'입니다. 이는 사용자에게 추가적인 비용 부담 없이 안전한 백업 서비스를 제공하는 것을 의미합니다. 다른 옵션들의 오류를 살펴보면: 1) DB 백업파일 보관 기간은 일반적으로 최대 30일까지 선택 가능합니다. 2) 백업 시간은 주로 1시간 단위로 선택 가능하며, 15분 단위는 아닙니다. 3) 자동 백업 시간 선택 시, 시스템이 부하가 적은 시간을 선택하지만 매번 임의의 시간에 진행되는 것은 아닙니다. 정확한 세부 사항은 네이버 클라우드 플랫폼의 공식 문서를 참조하는 것이 좋습니다."
  },
  {
    "id": 583,
    "question": "다음 중, Cloud Activity Tracer에 대한 설명 중 잘못된 것은?",
    "example": [
      {
        "num": 1,
        "text": "Console 활동에 대한 로그만 수집이 가능하다."
      },
      {
        "num": 2,
        "text": "Cloud Log Analytics와도 연계가되어 계정 활동 로그 수집 및 분석이 가능하다."
      },
      {
        "num": 3,
        "text": "메인 계정 뿐만 아니라 서브계정에 대한 활동 로그도 수집한다."
      },
      {
        "num": 4,
        "text": "Cloud Activity Tracer 페이지 자체적으로 검색 및 필터링 기능을 제공한다."
      }
    ],
    "answer": 1,
    "explanation": "Cloud Activity Tracer에 대한 설명 중 잘못된 것은 'Console 활동에 대한 로그만 수집이 가능하다'입니다. 실제로 Cloud Activity Tracer는 콘솔 활동뿐만 아니라 API 호출을 통한 활동도 기록합니다. 이 서비스는 네이버 클라우드 플랫폼 내에서 발생하는 거의 모든 활동을 추적하고 기록합니다. 올바른 설명들을 살펴보면: 1) Cloud Log Analytics와 연계되어 더 심층적인 로그 분석이 가능합니다. 2) 메인 계정과 서브계정 모두의 활동을 기록합니다. 이는 전체 조직의 클라우드 사용 현황을 파악하는 데 도움이 됩니다. 3) Cloud Activity Tracer는 자체적인 검색 및 필터링 기능을 제공하여 사용자가 필요한 정보를 쉽게 찾을 수 있게 합니다. 이 서비스는 보안, 감사, 규정 준수 등 다양한 목적으로 활용될 수 있습니다."
  },
  {
    "id": 584,
    "question": "리눅스에서 \"su root\" 명령어와 \"su -root\"명령어의 차이점에 대해 올바른 설명은?",
    "example": [
      {
        "num": 1,
        "text": "차이없음"
      },
      {
        "num": 2,
        "text": "su -명령어는 root 계정의 환경변수를 그대로 가져오지만, su root는 기존 계정의 환경변수를 사용한다"
      },
      {
        "num": 3,
        "text": "su 명령어는 sudo로 실행 가능한 명령어만 실행 가능하다"
      },
      {
        "num": 4,
        "text": "su명령어로 계정을 변경하게 되면 exit 시 로그아웃하게 된다."
      }
    ],
    "answer": 2,
    "explanation": "\"su root\"와 \"su -root\" 명령어의 주요 차이점은 환경 변수의 처리에 있습니다. \"su -root\" (또는 \"su -\")는 로그인 셸을 시뮬레이션하여 root 사용자의 환경을 완전히 로드합니다. 이는 root의 홈 디렉토리, PATH, 그리고 다른 환경 변수들을 설정합니다. 반면, \"su root\"는 현재 사용자의 환경을 유지한 채로 root 권한만을 얻습니다. 이는 현재 사용자의 PATH와 다른 환경 변수들을 계속 사용하게 됩니다. 보안상의 이유로, 시스템 관리 작업을 수행할 때는 \"su -\" 사용을 권장합니다."
  },
  {
    "id": 585,
    "question": "프로세스가 오픈한 파일을 확인하는 명령어는?",
    "example": [
      {
        "num": 1,
        "text": "ps"
      },
      {
        "num": 2,
        "text": "psof"
      },
      {
        "num": 3,
        "text": "top"
      },
      {
        "num": 4,
        "text": "lsof"
      }
    ],
    "answer": 4,
    "explanation": "lsof(List Open Files)는 프로세스가 열어놓은 파일들의 목록을 보여주는 유닉스 계열 운영체제의 명령어입니다. 이 명령어는 시스템에서 열린 파일들에 대한 정보를 제공하며, 어떤 프로세스가 어떤 파일을 사용하고 있는지 확인할 수 있습니다. 네트워크 소켓, 파이프 등도 파일로 취급되어 표시됩니다. 'ps'는 프로세스 목록을, 'top'은 시스템 사용량을 실시간으로 보여주는 명령어이며, 'psof'는 존재하지 않는 명령어입니다."
  },
  {
    "id": 586,
    "question": " PS명령어 실행 시 STAT 필드에 대한 설명 중 잘못된 것은?",
    "example": [
      {
        "num": 1,
        "text": "R : running or runnable"
      },
      {
        "num": 2,
        "text": "Z: defunct('zomble') process"
      },
      {
        "num": 3,
        "text": "W : paging"
      },
      {
        "num": 4,
        "text": "S: Stopped, either by a job control signal or because it is being traced"
      }
    ],
    "answer": 4,
    "explanation": "S는 sleep으로 인터럽트에의한(특정 이벤트 완료까지) 대기상태를 말합니다. - 'W'는 2.5버전대에서 시스템 페이징을 나타내었으나, 최신 Linux 시스템에서는 사용하지 않습니다."
  },
  {
    "id": 587,
    "question": "HTTP 상태 코드 중 연결이 잘못 된 것은?",
    "example": [
      {
        "num": 1,
        "text": "200 - 서버가 요청을 제대로 처리"
      },
      {
        "num": 2,
        "text": "300 - 서버가 GET 요정의 일부만 성공적으로 처리했다."
      },
      {
        "num": 3,
        "text": "404- 서버가 요정한 페이지(Resource)를 찾을 수 없다."
      },
      {
        "num": 4,
        "text": "500 - 서버에 오류가 발생하여 요청을 수행할 수 없다."
      }
    ],
    "answer": 2,
    "explanation": "서버가 GET요청의 일부만 성공적으로 처리했을때 반환하는 코드는 206 입니다. 300번대 상태 코드는 리다이렉션을 의미하며, 서버가 요청된 리소스를 찾았지만 클라이언트를 다른 위치로 이동시키는 경우에 사용됩니다. "
  },
  {
    "id": 588,
    "question": "VPC 플랫폼에서 Application Load Balancer를 이용중입니다. ALB 에 들어오는 액세스 로그정보를 수집하고자 할 때 가장 올바른 액션은?",
    "example": [
      {
        "num": 1,
        "text": "Load Balancer에서 액세스 로그 수집설정을 활성화 한다."
      },
      {
        "num": 2,
        "text": "서버에서 Application Load Balancer 로그를 수집하도록 설정을 변경 한다."
      },
      {
        "num": 3,
        "text": "ALB의 액세스 로그는 수집이불가능하다."
      },
      {
        "num": 4,
        "text": "Target Group에서 액세스 로그수집 설정을 활성화 한다."
      }
    ],
    "answer": 1,
    "explanation": "- ALB(Application Load Balancer)의 액세스 로그는 Load Balancer 자체에서 수집이 가능합니다. - 서버 측에서 따로 설정을 변경할 필요가 없으며, ALB에서 로그 수집 설정을 활성화하면 됩니다. - Target Group은 액세스 로그와 직접적인 관련이 없고, 로그 수집은 Load Balancer에서 관리합니다."
  }
]
